// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sajari/api/pipeline/v1/record.proto
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using Grpc.Core;

namespace Sajari.Api.Pipeline.V1 {
  /// <summary>
  ///  Store provides methods for adding, mutating and deleting records
  ///  using pipelines.
  /// </summary>
  public static class Store
  {
    static readonly string __ServiceName = "sajari.api.pipeline.v1.Store";

    static readonly Marshaller<global::Sajari.Api.Pipeline.V1.AddRequest> __Marshaller_AddRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Sajari.Api.Pipeline.V1.AddRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Sajari.Api.Pipeline.V1.AddResponse> __Marshaller_AddResponse = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Sajari.Api.Pipeline.V1.AddResponse.Parser.ParseFrom);

    static readonly Method<global::Sajari.Api.Pipeline.V1.AddRequest, global::Sajari.Api.Pipeline.V1.AddResponse> __Method_Add = new Method<global::Sajari.Api.Pipeline.V1.AddRequest, global::Sajari.Api.Pipeline.V1.AddResponse>(
        MethodType.Unary,
        __ServiceName,
        "Add",
        __Marshaller_AddRequest,
        __Marshaller_AddResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Sajari.Api.Pipeline.V1.RecordReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Store</summary>
    public abstract class StoreBase
    {
      /// <summary>
      ///  Add adds a list of records to a collection using a store pipeline.
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Sajari.Api.Pipeline.V1.AddResponse> Add(global::Sajari.Api.Pipeline.V1.AddRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Store</summary>
    public class StoreClient : ClientBase<StoreClient>
    {
      /// <summary>Creates a new client for Store</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public StoreClient(Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Store that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public StoreClient(CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected StoreClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected StoreClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      ///  Add adds a list of records to a collection using a store pipeline.
      /// </summary>
      public virtual global::Sajari.Api.Pipeline.V1.AddResponse Add(global::Sajari.Api.Pipeline.V1.AddRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return Add(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Add adds a list of records to a collection using a store pipeline.
      /// </summary>
      public virtual global::Sajari.Api.Pipeline.V1.AddResponse Add(global::Sajari.Api.Pipeline.V1.AddRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Add, null, options, request);
      }
      /// <summary>
      ///  Add adds a list of records to a collection using a store pipeline.
      /// </summary>
      public virtual AsyncUnaryCall<global::Sajari.Api.Pipeline.V1.AddResponse> AddAsync(global::Sajari.Api.Pipeline.V1.AddRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AddAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Add adds a list of records to a collection using a store pipeline.
      /// </summary>
      public virtual AsyncUnaryCall<global::Sajari.Api.Pipeline.V1.AddResponse> AddAsync(global::Sajari.Api.Pipeline.V1.AddRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Add, null, options, request);
      }
      protected override StoreClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new StoreClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    public static ServerServiceDefinition BindService(StoreBase serviceImpl)
    {
      return ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Add, serviceImpl.Add).Build();
    }

  }
}
#endregion
