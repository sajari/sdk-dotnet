// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sajari/api/engine/engine.proto
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using Grpc.Core;

namespace Sajari.Api.Engine {
  /// <summary>
  ///  Engine defines internal methods for admin control of an engine, including
  ///  creating/loading/unloading/listing (loaded) collections.
  /// </summary>
  public static class Engine
  {
    static readonly string __ServiceName = "sajari.api.engine.Engine";

    static readonly Marshaller<global::Sajari.Api.Engine.Collection> __Marshaller_Collection = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Sajari.Api.Engine.Collection.Parser.ParseFrom);
    static readonly Marshaller<global::Sajari.Rpc.Empty> __Marshaller_Empty = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Sajari.Rpc.Empty.Parser.ParseFrom);

    static readonly Method<global::Sajari.Api.Engine.Collection, global::Sajari.Rpc.Empty> __Method_CreateCollection = new Method<global::Sajari.Api.Engine.Collection, global::Sajari.Rpc.Empty>(
        MethodType.Unary,
        __ServiceName,
        "CreateCollection",
        __Marshaller_Collection,
        __Marshaller_Empty);

    static readonly Method<global::Sajari.Api.Engine.Collection, global::Sajari.Rpc.Empty> __Method_DeleteCollection = new Method<global::Sajari.Api.Engine.Collection, global::Sajari.Rpc.Empty>(
        MethodType.Unary,
        __ServiceName,
        "DeleteCollection",
        __Marshaller_Collection,
        __Marshaller_Empty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Sajari.Api.Engine.EngineReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Engine</summary>
    public abstract class EngineBase
    {
      /// <summary>
      ///  Create a collection.
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Sajari.Rpc.Empty> CreateCollection(global::Sajari.Api.Engine.Collection request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///  Deletes all resources associated with this collection. Collections must first
      ///  be unloaded before they can be deleted.
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Sajari.Rpc.Empty> DeleteCollection(global::Sajari.Api.Engine.Collection request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Engine</summary>
    public class EngineClient : ClientBase<EngineClient>
    {
      /// <summary>Creates a new client for Engine</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public EngineClient(Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Engine that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public EngineClient(CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected EngineClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected EngineClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      ///  Create a collection.
      /// </summary>
      public virtual global::Sajari.Rpc.Empty CreateCollection(global::Sajari.Api.Engine.Collection request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CreateCollection(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Create a collection.
      /// </summary>
      public virtual global::Sajari.Rpc.Empty CreateCollection(global::Sajari.Api.Engine.Collection request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateCollection, null, options, request);
      }
      /// <summary>
      ///  Create a collection.
      /// </summary>
      public virtual AsyncUnaryCall<global::Sajari.Rpc.Empty> CreateCollectionAsync(global::Sajari.Api.Engine.Collection request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CreateCollectionAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Create a collection.
      /// </summary>
      public virtual AsyncUnaryCall<global::Sajari.Rpc.Empty> CreateCollectionAsync(global::Sajari.Api.Engine.Collection request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateCollection, null, options, request);
      }
      /// <summary>
      ///  Deletes all resources associated with this collection. Collections must first
      ///  be unloaded before they can be deleted.
      /// </summary>
      public virtual global::Sajari.Rpc.Empty DeleteCollection(global::Sajari.Api.Engine.Collection request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return DeleteCollection(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Deletes all resources associated with this collection. Collections must first
      ///  be unloaded before they can be deleted.
      /// </summary>
      public virtual global::Sajari.Rpc.Empty DeleteCollection(global::Sajari.Api.Engine.Collection request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteCollection, null, options, request);
      }
      /// <summary>
      ///  Deletes all resources associated with this collection. Collections must first
      ///  be unloaded before they can be deleted.
      /// </summary>
      public virtual AsyncUnaryCall<global::Sajari.Rpc.Empty> DeleteCollectionAsync(global::Sajari.Api.Engine.Collection request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return DeleteCollectionAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Deletes all resources associated with this collection. Collections must first
      ///  be unloaded before they can be deleted.
      /// </summary>
      public virtual AsyncUnaryCall<global::Sajari.Rpc.Empty> DeleteCollectionAsync(global::Sajari.Api.Engine.Collection request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteCollection, null, options, request);
      }
      protected override EngineClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new EngineClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    public static ServerServiceDefinition BindService(EngineBase serviceImpl)
    {
      return ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateCollection, serviceImpl.CreateCollection)
          .AddMethod(__Method_DeleteCollection, serviceImpl.DeleteCollection).Build();
    }

  }
}
#endregion
