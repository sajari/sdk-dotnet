// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sajari/bayes/train/train.proto
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using Grpc.Core;

namespace Sajari.Bayes.Train {
  /// <summary>
  ///  Train defines methods used to interact with the bayes training service
  /// </summary>
  public static class Train
  {
    static readonly string __ServiceName = "sajari.bayes.train.Train";

    static readonly Marshaller<global::Sajari.Bayes.Train.Request> __Marshaller_Request = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Sajari.Bayes.Train.Request.Parser.ParseFrom);
    static readonly Marshaller<global::Sajari.Bayes.Train.Response> __Marshaller_Response = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Sajari.Bayes.Train.Response.Parser.ParseFrom);

    static readonly Method<global::Sajari.Bayes.Train.Request, global::Sajari.Bayes.Train.Response> __Method_Train = new Method<global::Sajari.Bayes.Train.Request, global::Sajari.Bayes.Train.Response>(
        MethodType.Unary,
        __ServiceName,
        "Train",
        __Marshaller_Request,
        __Marshaller_Response);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Sajari.Bayes.Train.TrainReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Train</summary>
    public abstract class TrainBase
    {
      /// <summary>
      ///  Train takes a set of training and testing documents representing
      ///  a set of classes and creates a naive bayes model to represent the
      ///  training set. The response returns the accuracy of the model using
      ///  the set of testing documents. See TrainingSet for details on how
      ///  to create a training set.
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Sajari.Bayes.Train.Response> Train(global::Sajari.Bayes.Train.Request request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Train</summary>
    public class TrainClient : ClientBase<TrainClient>
    {
      /// <summary>Creates a new client for Train</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public TrainClient(Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Train that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public TrainClient(CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected TrainClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected TrainClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      ///  Train takes a set of training and testing documents representing
      ///  a set of classes and creates a naive bayes model to represent the
      ///  training set. The response returns the accuracy of the model using
      ///  the set of testing documents. See TrainingSet for details on how
      ///  to create a training set.
      /// </summary>
      public virtual global::Sajari.Bayes.Train.Response Train(global::Sajari.Bayes.Train.Request request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return Train(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Train takes a set of training and testing documents representing
      ///  a set of classes and creates a naive bayes model to represent the
      ///  training set. The response returns the accuracy of the model using
      ///  the set of testing documents. See TrainingSet for details on how
      ///  to create a training set.
      /// </summary>
      public virtual global::Sajari.Bayes.Train.Response Train(global::Sajari.Bayes.Train.Request request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Train, null, options, request);
      }
      /// <summary>
      ///  Train takes a set of training and testing documents representing
      ///  a set of classes and creates a naive bayes model to represent the
      ///  training set. The response returns the accuracy of the model using
      ///  the set of testing documents. See TrainingSet for details on how
      ///  to create a training set.
      /// </summary>
      public virtual AsyncUnaryCall<global::Sajari.Bayes.Train.Response> TrainAsync(global::Sajari.Bayes.Train.Request request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return TrainAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Train takes a set of training and testing documents representing
      ///  a set of classes and creates a naive bayes model to represent the
      ///  training set. The response returns the accuracy of the model using
      ///  the set of testing documents. See TrainingSet for details on how
      ///  to create a training set.
      /// </summary>
      public virtual AsyncUnaryCall<global::Sajari.Bayes.Train.Response> TrainAsync(global::Sajari.Bayes.Train.Request request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Train, null, options, request);
      }
      protected override TrainClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new TrainClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    public static ServerServiceDefinition BindService(TrainBase serviceImpl)
    {
      return ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Train, serviceImpl.Train).Build();
    }

  }
}
#endregion
