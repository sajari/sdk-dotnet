// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sajari/autocomplete/autocomplete.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Sajari.Autocomplete {

  /// <summary>Holder for reflection information generated from sajari/autocomplete/autocomplete.proto</summary>
  public static partial class AutocompleteReflection {

    #region Descriptor
    /// <summary>File descriptor for sajari/autocomplete/autocomplete.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AutocompleteReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiZzYWphcmkvYXV0b2NvbXBsZXRlL2F1dG9jb21wbGV0ZS5wcm90bxITc2Fq",
            "YXJpLmF1dG9jb21wbGV0ZRoWc2FqYXJpL3JwYy9lbXB0eS5wcm90byIVCgVN",
            "b2RlbBIMCgRuYW1lGAEgASgJIk4KElRyYWluQ29ycHVzUmVxdWVzdBIpCgVt",
            "b2RlbBgBIAEoCzIaLnNhamFyaS5hdXRvY29tcGxldGUuTW9kZWwSDQoFdGVy",
            "bXMYAiADKAkiXQoRVHJhaW5RdWVyeVJlcXVlc3QSKQoFbW9kZWwYASABKAsy",
            "Gi5zYWphcmkuYXV0b2NvbXBsZXRlLk1vZGVsEg4KBnBocmFzZRgCIAEoCRIN",
            "CgV0ZXJtcxgDIAMoCSJfChNBdXRvQ29tcGxldGVSZXF1ZXN0EikKBW1vZGVs",
            "GAEgASgLMhouc2FqYXJpLmF1dG9jb21wbGV0ZS5Nb2RlbBIOCgZwaHJhc2UY",
            "AiABKAkSDQoFdGVybXMYAyADKAkiJwoUQXV0b0NvbXBsZXRlUmVzcG9uc2US",
            "DwoHcGhyYXNlcxgBIAMoCTJ5CgVBZG1pbhI3CgZDcmVhdGUSGi5zYWphcmku",
            "YXV0b2NvbXBsZXRlLk1vZGVsGhEuc2FqYXJpLnJwYy5FbXB0eRI3CgZEZWxl",
            "dGUSGi5zYWphcmkuYXV0b2NvbXBsZXRlLk1vZGVsGhEuc2FqYXJpLnJwYy5F",
            "bXB0eTJsCgVRdWVyeRJjCgxBdXRvQ29tcGxldGUSKC5zYWphcmkuYXV0b2Nv",
            "bXBsZXRlLkF1dG9Db21wbGV0ZVJlcXVlc3QaKS5zYWphcmkuYXV0b2NvbXBs",
            "ZXRlLkF1dG9Db21wbGV0ZVJlc3BvbnNlMpsBCgVUcmFpbhJJCgtUcmFpbkNv",
            "cnB1cxInLnNhamFyaS5hdXRvY29tcGxldGUuVHJhaW5Db3JwdXNSZXF1ZXN0",
            "GhEuc2FqYXJpLnJwYy5FbXB0eRJHCgpUcmFpblF1ZXJ5EiYuc2FqYXJpLmF1",
            "dG9jb21wbGV0ZS5UcmFpblF1ZXJ5UmVxdWVzdBoRLnNhamFyaS5ycGMuRW1w",
            "dHliBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Sajari.Rpc.EmptyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Sajari.Autocomplete.Model), global::Sajari.Autocomplete.Model.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sajari.Autocomplete.TrainCorpusRequest), global::Sajari.Autocomplete.TrainCorpusRequest.Parser, new[]{ "Model", "Terms" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sajari.Autocomplete.TrainQueryRequest), global::Sajari.Autocomplete.TrainQueryRequest.Parser, new[]{ "Model", "Phrase", "Terms" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sajari.Autocomplete.AutoCompleteRequest), global::Sajari.Autocomplete.AutoCompleteRequest.Parser, new[]{ "Model", "Phrase", "Terms" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sajari.Autocomplete.AutoCompleteResponse), global::Sajari.Autocomplete.AutoCompleteResponse.Parser, new[]{ "Phrases" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Model is an autocomplete model.
  /// </summary>
  public sealed partial class Model : pb::IMessage<Model> {
    private static readonly pb::MessageParser<Model> _parser = new pb::MessageParser<Model>(() => new Model());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Model> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sajari.Autocomplete.AutocompleteReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Model() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Model(Model other) : this() {
      name_ = other.name_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Model Clone() {
      return new Model(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Name of the model.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Model);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Model other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Model other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// TrainCorpusRequest is used to train the corpus to assist in detecting
  /// spelling mistakes.
  /// </summary>
  public sealed partial class TrainCorpusRequest : pb::IMessage<TrainCorpusRequest> {
    private static readonly pb::MessageParser<TrainCorpusRequest> _parser = new pb::MessageParser<TrainCorpusRequest>(() => new TrainCorpusRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TrainCorpusRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sajari.Autocomplete.AutocompleteReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrainCorpusRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrainCorpusRequest(TrainCorpusRequest other) : this() {
      Model = other.model_ != null ? other.Model.Clone() : null;
      terms_ = other.terms_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrainCorpusRequest Clone() {
      return new TrainCorpusRequest(this);
    }

    /// <summary>Field number for the "model" field.</summary>
    public const int ModelFieldNumber = 1;
    private global::Sajari.Autocomplete.Model model_;
    /// <summary>
    /// Model to train.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Sajari.Autocomplete.Model Model {
      get { return model_; }
      set {
        model_ = value;
      }
    }

    /// <summary>Field number for the "terms" field.</summary>
    public const int TermsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_terms_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> terms_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The terms to train the corpus with. These should be correctly
    /// spelt to avoid autocorrecting to misspellings.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Terms {
      get { return terms_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TrainCorpusRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TrainCorpusRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Model, other.Model)) return false;
      if(!terms_.Equals(other.terms_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (model_ != null) hash ^= Model.GetHashCode();
      hash ^= terms_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (model_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Model);
      }
      terms_.WriteTo(output, _repeated_terms_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (model_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Model);
      }
      size += terms_.CalculateSize(_repeated_terms_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TrainCorpusRequest other) {
      if (other == null) {
        return;
      }
      if (other.model_ != null) {
        if (model_ == null) {
          model_ = new global::Sajari.Autocomplete.Model();
        }
        Model.MergeFrom(other.Model);
      }
      terms_.Add(other.terms_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (model_ == null) {
              model_ = new global::Sajari.Autocomplete.Model();
            }
            input.ReadMessage(model_);
            break;
          }
          case 18: {
            terms_.AddEntriesFrom(input, _repeated_terms_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// TrainQueryRequest is a query used to train the autocomplete
  /// model what is popular from a user perspective.
  /// </summary>
  public sealed partial class TrainQueryRequest : pb::IMessage<TrainQueryRequest> {
    private static readonly pb::MessageParser<TrainQueryRequest> _parser = new pb::MessageParser<TrainQueryRequest>(() => new TrainQueryRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TrainQueryRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sajari.Autocomplete.AutocompleteReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrainQueryRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrainQueryRequest(TrainQueryRequest other) : this() {
      Model = other.model_ != null ? other.Model.Clone() : null;
      phrase_ = other.phrase_;
      terms_ = other.terms_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrainQueryRequest Clone() {
      return new TrainQueryRequest(this);
    }

    /// <summary>Field number for the "model" field.</summary>
    public const int ModelFieldNumber = 1;
    private global::Sajari.Autocomplete.Model model_;
    /// <summary>
    /// Model to train.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Sajari.Autocomplete.Model Model {
      get { return model_; }
      set {
        model_ = value;
      }
    }

    /// <summary>Field number for the "phrase" field.</summary>
    public const int PhraseFieldNumber = 2;
    private string phrase_ = "";
    /// <summary>
    /// The full query phrase.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Phrase {
      get { return phrase_; }
      set {
        phrase_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "terms" field.</summary>
    public const int TermsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_terms_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> terms_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The query phrase broken into terms. Typically this would use spaces
    /// as delimiters, but it is not restricted to spaces for language flexibility.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Terms {
      get { return terms_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TrainQueryRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TrainQueryRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Model, other.Model)) return false;
      if (Phrase != other.Phrase) return false;
      if(!terms_.Equals(other.terms_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (model_ != null) hash ^= Model.GetHashCode();
      if (Phrase.Length != 0) hash ^= Phrase.GetHashCode();
      hash ^= terms_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (model_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Model);
      }
      if (Phrase.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Phrase);
      }
      terms_.WriteTo(output, _repeated_terms_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (model_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Model);
      }
      if (Phrase.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Phrase);
      }
      size += terms_.CalculateSize(_repeated_terms_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TrainQueryRequest other) {
      if (other == null) {
        return;
      }
      if (other.model_ != null) {
        if (model_ == null) {
          model_ = new global::Sajari.Autocomplete.Model();
        }
        Model.MergeFrom(other.Model);
      }
      if (other.Phrase.Length != 0) {
        Phrase = other.Phrase;
      }
      terms_.Add(other.terms_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (model_ == null) {
              model_ = new global::Sajari.Autocomplete.Model();
            }
            input.ReadMessage(model_);
            break;
          }
          case 18: {
            Phrase = input.ReadString();
            break;
          }
          case 26: {
            terms_.AddEntriesFrom(input, _repeated_terms_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// AutoCompleteRequest is a query to be autocompleted.
  /// </summary>
  public sealed partial class AutoCompleteRequest : pb::IMessage<AutoCompleteRequest> {
    private static readonly pb::MessageParser<AutoCompleteRequest> _parser = new pb::MessageParser<AutoCompleteRequest>(() => new AutoCompleteRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AutoCompleteRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sajari.Autocomplete.AutocompleteReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AutoCompleteRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AutoCompleteRequest(AutoCompleteRequest other) : this() {
      Model = other.model_ != null ? other.Model.Clone() : null;
      phrase_ = other.phrase_;
      terms_ = other.terms_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AutoCompleteRequest Clone() {
      return new AutoCompleteRequest(this);
    }

    /// <summary>Field number for the "model" field.</summary>
    public const int ModelFieldNumber = 1;
    private global::Sajari.Autocomplete.Model model_;
    /// <summary>
    /// Model to train.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Sajari.Autocomplete.Model Model {
      get { return model_; }
      set {
        model_ = value;
      }
    }

    /// <summary>Field number for the "phrase" field.</summary>
    public const int PhraseFieldNumber = 2;
    private string phrase_ = "";
    /// <summary>
    /// The phrase to be autocompleted.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Phrase {
      get { return phrase_; }
      set {
        phrase_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "terms" field.</summary>
    public const int TermsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_terms_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> terms_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The query phrase broken into terms. Typically this would use spaces
    /// as delimiters, but it is not restricted to spaces for language flexibility.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Terms {
      get { return terms_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AutoCompleteRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AutoCompleteRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Model, other.Model)) return false;
      if (Phrase != other.Phrase) return false;
      if(!terms_.Equals(other.terms_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (model_ != null) hash ^= Model.GetHashCode();
      if (Phrase.Length != 0) hash ^= Phrase.GetHashCode();
      hash ^= terms_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (model_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Model);
      }
      if (Phrase.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Phrase);
      }
      terms_.WriteTo(output, _repeated_terms_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (model_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Model);
      }
      if (Phrase.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Phrase);
      }
      size += terms_.CalculateSize(_repeated_terms_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AutoCompleteRequest other) {
      if (other == null) {
        return;
      }
      if (other.model_ != null) {
        if (model_ == null) {
          model_ = new global::Sajari.Autocomplete.Model();
        }
        Model.MergeFrom(other.Model);
      }
      if (other.Phrase.Length != 0) {
        Phrase = other.Phrase;
      }
      terms_.Add(other.terms_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (model_ == null) {
              model_ = new global::Sajari.Autocomplete.Model();
            }
            input.ReadMessage(model_);
            break;
          }
          case 18: {
            Phrase = input.ReadString();
            break;
          }
          case 26: {
            terms_.AddEntriesFrom(input, _repeated_terms_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// AutoCompleteResponse is an ordered list of autocompleted phrases in response
  /// to an AutoCompleteRequest.
  /// </summary>
  public sealed partial class AutoCompleteResponse : pb::IMessage<AutoCompleteResponse> {
    private static readonly pb::MessageParser<AutoCompleteResponse> _parser = new pb::MessageParser<AutoCompleteResponse>(() => new AutoCompleteResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AutoCompleteResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sajari.Autocomplete.AutocompleteReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AutoCompleteResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AutoCompleteResponse(AutoCompleteResponse other) : this() {
      phrases_ = other.phrases_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AutoCompleteResponse Clone() {
      return new AutoCompleteResponse(this);
    }

    /// <summary>Field number for the "phrases" field.</summary>
    public const int PhrasesFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_phrases_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> phrases_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Potential autocompletes in order of most likely to least likely.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Phrases {
      get { return phrases_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AutoCompleteResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AutoCompleteResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!phrases_.Equals(other.phrases_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= phrases_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      phrases_.WriteTo(output, _repeated_phrases_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += phrases_.CalculateSize(_repeated_phrases_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AutoCompleteResponse other) {
      if (other == null) {
        return;
      }
      phrases_.Add(other.phrases_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            phrases_.AddEntriesFrom(input, _repeated_phrases_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
