// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sajari/autocomplete/autocomplete.proto
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using Grpc.Core;

namespace Sajari.Autocomplete {
  /// <summary>
  ///  Control defines methods for creating and deleting autocomplete models.
  /// </summary>
  public static class Admin
  {
    static readonly string __ServiceName = "sajari.autocomplete.Admin";

    static readonly Marshaller<global::Sajari.Autocomplete.Model> __Marshaller_Model = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Sajari.Autocomplete.Model.Parser.ParseFrom);
    static readonly Marshaller<global::Sajari.Rpc.Empty> __Marshaller_Empty = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Sajari.Rpc.Empty.Parser.ParseFrom);

    static readonly Method<global::Sajari.Autocomplete.Model, global::Sajari.Rpc.Empty> __Method_Create = new Method<global::Sajari.Autocomplete.Model, global::Sajari.Rpc.Empty>(
        MethodType.Unary,
        __ServiceName,
        "Create",
        __Marshaller_Model,
        __Marshaller_Empty);

    static readonly Method<global::Sajari.Autocomplete.Model, global::Sajari.Rpc.Empty> __Method_Delete = new Method<global::Sajari.Autocomplete.Model, global::Sajari.Rpc.Empty>(
        MethodType.Unary,
        __ServiceName,
        "Delete",
        __Marshaller_Model,
        __Marshaller_Empty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Sajari.Autocomplete.AutocompleteReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Admin</summary>
    public abstract class AdminBase
    {
      /// <summary>
      ///  Create a new autocomplete model.
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Sajari.Rpc.Empty> Create(global::Sajari.Autocomplete.Model request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///  Delete an existing model
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Sajari.Rpc.Empty> Delete(global::Sajari.Autocomplete.Model request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Admin</summary>
    public class AdminClient : ClientBase<AdminClient>
    {
      /// <summary>Creates a new client for Admin</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public AdminClient(Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Admin that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public AdminClient(CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected AdminClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected AdminClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      ///  Create a new autocomplete model.
      /// </summary>
      public virtual global::Sajari.Rpc.Empty Create(global::Sajari.Autocomplete.Model request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return Create(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Create a new autocomplete model.
      /// </summary>
      public virtual global::Sajari.Rpc.Empty Create(global::Sajari.Autocomplete.Model request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Create, null, options, request);
      }
      /// <summary>
      ///  Create a new autocomplete model.
      /// </summary>
      public virtual AsyncUnaryCall<global::Sajari.Rpc.Empty> CreateAsync(global::Sajari.Autocomplete.Model request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CreateAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Create a new autocomplete model.
      /// </summary>
      public virtual AsyncUnaryCall<global::Sajari.Rpc.Empty> CreateAsync(global::Sajari.Autocomplete.Model request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Create, null, options, request);
      }
      /// <summary>
      ///  Delete an existing model
      /// </summary>
      public virtual global::Sajari.Rpc.Empty Delete(global::Sajari.Autocomplete.Model request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return Delete(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Delete an existing model
      /// </summary>
      public virtual global::Sajari.Rpc.Empty Delete(global::Sajari.Autocomplete.Model request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Delete, null, options, request);
      }
      /// <summary>
      ///  Delete an existing model
      /// </summary>
      public virtual AsyncUnaryCall<global::Sajari.Rpc.Empty> DeleteAsync(global::Sajari.Autocomplete.Model request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return DeleteAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Delete an existing model
      /// </summary>
      public virtual AsyncUnaryCall<global::Sajari.Rpc.Empty> DeleteAsync(global::Sajari.Autocomplete.Model request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Delete, null, options, request);
      }
      protected override AdminClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new AdminClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    public static ServerServiceDefinition BindService(AdminBase serviceImpl)
    {
      return ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Create, serviceImpl.Create)
          .AddMethod(__Method_Delete, serviceImpl.Delete).Build();
    }

  }
  /// <summary>
  ///  Query defines methods for quering an autocomplete model.
  /// </summary>
  public static class Query
  {
    static readonly string __ServiceName = "sajari.autocomplete.Query";

    static readonly Marshaller<global::Sajari.Autocomplete.AutoCompleteRequest> __Marshaller_AutoCompleteRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Sajari.Autocomplete.AutoCompleteRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Sajari.Autocomplete.AutoCompleteResponse> __Marshaller_AutoCompleteResponse = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Sajari.Autocomplete.AutoCompleteResponse.Parser.ParseFrom);

    static readonly Method<global::Sajari.Autocomplete.AutoCompleteRequest, global::Sajari.Autocomplete.AutoCompleteResponse> __Method_AutoComplete = new Method<global::Sajari.Autocomplete.AutoCompleteRequest, global::Sajari.Autocomplete.AutoCompleteResponse>(
        MethodType.Unary,
        __ServiceName,
        "AutoComplete",
        __Marshaller_AutoCompleteRequest,
        __Marshaller_AutoCompleteResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Sajari.Autocomplete.AutocompleteReflection.Descriptor.Services[1]; }
    }

    /// <summary>Base class for server-side implementations of Query</summary>
    public abstract class QueryBase
    {
      /// <summary>
      ///  Autocomplete a phrase. Potentially also fix spelling mistakes.
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Sajari.Autocomplete.AutoCompleteResponse> AutoComplete(global::Sajari.Autocomplete.AutoCompleteRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Query</summary>
    public class QueryClient : ClientBase<QueryClient>
    {
      /// <summary>Creates a new client for Query</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public QueryClient(Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Query that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public QueryClient(CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected QueryClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected QueryClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      ///  Autocomplete a phrase. Potentially also fix spelling mistakes.
      /// </summary>
      public virtual global::Sajari.Autocomplete.AutoCompleteResponse AutoComplete(global::Sajari.Autocomplete.AutoCompleteRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AutoComplete(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Autocomplete a phrase. Potentially also fix spelling mistakes.
      /// </summary>
      public virtual global::Sajari.Autocomplete.AutoCompleteResponse AutoComplete(global::Sajari.Autocomplete.AutoCompleteRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AutoComplete, null, options, request);
      }
      /// <summary>
      ///  Autocomplete a phrase. Potentially also fix spelling mistakes.
      /// </summary>
      public virtual AsyncUnaryCall<global::Sajari.Autocomplete.AutoCompleteResponse> AutoCompleteAsync(global::Sajari.Autocomplete.AutoCompleteRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AutoCompleteAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Autocomplete a phrase. Potentially also fix spelling mistakes.
      /// </summary>
      public virtual AsyncUnaryCall<global::Sajari.Autocomplete.AutoCompleteResponse> AutoCompleteAsync(global::Sajari.Autocomplete.AutoCompleteRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AutoComplete, null, options, request);
      }
      protected override QueryClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new QueryClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    public static ServerServiceDefinition BindService(QueryBase serviceImpl)
    {
      return ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_AutoComplete, serviceImpl.AutoComplete).Build();
    }

  }
  /// <summary>
  ///  Train defines methods for training autocomplete models.
  /// </summary>
  public static class Train
  {
    static readonly string __ServiceName = "sajari.autocomplete.Train";

    static readonly Marshaller<global::Sajari.Autocomplete.TrainCorpusRequest> __Marshaller_TrainCorpusRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Sajari.Autocomplete.TrainCorpusRequest.Parser.ParseFrom);
    static readonly Marshaller<global::Sajari.Rpc.Empty> __Marshaller_Empty = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Sajari.Rpc.Empty.Parser.ParseFrom);
    static readonly Marshaller<global::Sajari.Autocomplete.TrainQueryRequest> __Marshaller_TrainQueryRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Sajari.Autocomplete.TrainQueryRequest.Parser.ParseFrom);

    static readonly Method<global::Sajari.Autocomplete.TrainCorpusRequest, global::Sajari.Rpc.Empty> __Method_TrainCorpus = new Method<global::Sajari.Autocomplete.TrainCorpusRequest, global::Sajari.Rpc.Empty>(
        MethodType.Unary,
        __ServiceName,
        "TrainCorpus",
        __Marshaller_TrainCorpusRequest,
        __Marshaller_Empty);

    static readonly Method<global::Sajari.Autocomplete.TrainQueryRequest, global::Sajari.Rpc.Empty> __Method_TrainQuery = new Method<global::Sajari.Autocomplete.TrainQueryRequest, global::Sajari.Rpc.Empty>(
        MethodType.Unary,
        __ServiceName,
        "TrainQuery",
        __Marshaller_TrainQueryRequest,
        __Marshaller_Empty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Sajari.Autocomplete.AutocompleteReflection.Descriptor.Services[2]; }
    }

    /// <summary>Base class for server-side implementations of Train</summary>
    public abstract class TrainBase
    {
      /// <summary>
      ///  Train the corpus (used for spell correction).
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Sajari.Rpc.Empty> TrainCorpus(global::Sajari.Autocomplete.TrainCorpusRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///  Train queries (used to assist with query popularity prediction).
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Sajari.Rpc.Empty> TrainQuery(global::Sajari.Autocomplete.TrainQueryRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Train</summary>
    public class TrainClient : ClientBase<TrainClient>
    {
      /// <summary>Creates a new client for Train</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public TrainClient(Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Train that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public TrainClient(CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected TrainClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected TrainClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      ///  Train the corpus (used for spell correction).
      /// </summary>
      public virtual global::Sajari.Rpc.Empty TrainCorpus(global::Sajari.Autocomplete.TrainCorpusRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return TrainCorpus(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Train the corpus (used for spell correction).
      /// </summary>
      public virtual global::Sajari.Rpc.Empty TrainCorpus(global::Sajari.Autocomplete.TrainCorpusRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_TrainCorpus, null, options, request);
      }
      /// <summary>
      ///  Train the corpus (used for spell correction).
      /// </summary>
      public virtual AsyncUnaryCall<global::Sajari.Rpc.Empty> TrainCorpusAsync(global::Sajari.Autocomplete.TrainCorpusRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return TrainCorpusAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Train the corpus (used for spell correction).
      /// </summary>
      public virtual AsyncUnaryCall<global::Sajari.Rpc.Empty> TrainCorpusAsync(global::Sajari.Autocomplete.TrainCorpusRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_TrainCorpus, null, options, request);
      }
      /// <summary>
      ///  Train queries (used to assist with query popularity prediction).
      /// </summary>
      public virtual global::Sajari.Rpc.Empty TrainQuery(global::Sajari.Autocomplete.TrainQueryRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return TrainQuery(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Train queries (used to assist with query popularity prediction).
      /// </summary>
      public virtual global::Sajari.Rpc.Empty TrainQuery(global::Sajari.Autocomplete.TrainQueryRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_TrainQuery, null, options, request);
      }
      /// <summary>
      ///  Train queries (used to assist with query popularity prediction).
      /// </summary>
      public virtual AsyncUnaryCall<global::Sajari.Rpc.Empty> TrainQueryAsync(global::Sajari.Autocomplete.TrainQueryRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return TrainQueryAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  Train queries (used to assist with query popularity prediction).
      /// </summary>
      public virtual AsyncUnaryCall<global::Sajari.Rpc.Empty> TrainQueryAsync(global::Sajari.Autocomplete.TrainQueryRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_TrainQuery, null, options, request);
      }
      protected override TrainClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new TrainClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    public static ServerServiceDefinition BindService(TrainBase serviceImpl)
    {
      return ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_TrainCorpus, serviceImpl.TrainCorpus)
          .AddMethod(__Method_TrainQuery, serviceImpl.TrainQuery).Build();
    }

  }
}
#endregion
