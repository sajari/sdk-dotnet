// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sajari/engine/schema/schema.proto
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using Grpc.Core;

namespace Sajari.Engine.Schema {
  /// <summary>
  ///  Service Schema defines methods for managing collection schemas.
  /// </summary>
  public static class Schema
  {
    static readonly string __ServiceName = "sajari.engine.schema.Schema";

    static readonly Marshaller<global::Sajari.Rpc.Empty> __Marshaller_Empty = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Sajari.Rpc.Empty.Parser.ParseFrom);
    static readonly Marshaller<global::Sajari.Engine.Schema.Fields> __Marshaller_Fields = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Sajari.Engine.Schema.Fields.Parser.ParseFrom);
    static readonly Marshaller<global::Sajari.Engine.Schema.Response> __Marshaller_Response = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Sajari.Engine.Schema.Response.Parser.ParseFrom);
    static readonly Marshaller<global::Sajari.Engine.Schema.MutateFieldRequest> __Marshaller_MutateFieldRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Sajari.Engine.Schema.MutateFieldRequest.Parser.ParseFrom);

    static readonly Method<global::Sajari.Rpc.Empty, global::Sajari.Engine.Schema.Fields> __Method_GetFields = new Method<global::Sajari.Rpc.Empty, global::Sajari.Engine.Schema.Fields>(
        MethodType.Unary,
        __ServiceName,
        "GetFields",
        __Marshaller_Empty,
        __Marshaller_Fields);

    static readonly Method<global::Sajari.Engine.Schema.Fields, global::Sajari.Engine.Schema.Response> __Method_AddFields = new Method<global::Sajari.Engine.Schema.Fields, global::Sajari.Engine.Schema.Response>(
        MethodType.Unary,
        __ServiceName,
        "AddFields",
        __Marshaller_Fields,
        __Marshaller_Response);

    static readonly Method<global::Sajari.Engine.Schema.MutateFieldRequest, global::Sajari.Engine.Schema.Response> __Method_MutateField = new Method<global::Sajari.Engine.Schema.MutateFieldRequest, global::Sajari.Engine.Schema.Response>(
        MethodType.Unary,
        __ServiceName,
        "MutateField",
        __Marshaller_MutateFieldRequest,
        __Marshaller_Response);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Sajari.Engine.Schema.SchemaReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Schema</summary>
    public abstract class SchemaBase
    {
      /// <summary>
      ///  GetFields returns the fields in the schema.
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Sajari.Engine.Schema.Fields> GetFields(global::Sajari.Rpc.Empty request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///  AddFields adds new fields to the schema.
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Sajari.Engine.Schema.Response> AddFields(global::Sajari.Engine.Schema.Fields request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///  MutateField mutates a field in the schema.
      /// </summary>
      public virtual global::System.Threading.Tasks.Task<global::Sajari.Engine.Schema.Response> MutateField(global::Sajari.Engine.Schema.MutateFieldRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Schema</summary>
    public class SchemaClient : ClientBase<SchemaClient>
    {
      /// <summary>Creates a new client for Schema</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public SchemaClient(Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Schema that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public SchemaClient(CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected SchemaClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected SchemaClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      ///  GetFields returns the fields in the schema.
      /// </summary>
      public virtual global::Sajari.Engine.Schema.Fields GetFields(global::Sajari.Rpc.Empty request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetFields(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  GetFields returns the fields in the schema.
      /// </summary>
      public virtual global::Sajari.Engine.Schema.Fields GetFields(global::Sajari.Rpc.Empty request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetFields, null, options, request);
      }
      /// <summary>
      ///  GetFields returns the fields in the schema.
      /// </summary>
      public virtual AsyncUnaryCall<global::Sajari.Engine.Schema.Fields> GetFieldsAsync(global::Sajari.Rpc.Empty request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetFieldsAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  GetFields returns the fields in the schema.
      /// </summary>
      public virtual AsyncUnaryCall<global::Sajari.Engine.Schema.Fields> GetFieldsAsync(global::Sajari.Rpc.Empty request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetFields, null, options, request);
      }
      /// <summary>
      ///  AddFields adds new fields to the schema.
      /// </summary>
      public virtual global::Sajari.Engine.Schema.Response AddFields(global::Sajari.Engine.Schema.Fields request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AddFields(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  AddFields adds new fields to the schema.
      /// </summary>
      public virtual global::Sajari.Engine.Schema.Response AddFields(global::Sajari.Engine.Schema.Fields request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddFields, null, options, request);
      }
      /// <summary>
      ///  AddFields adds new fields to the schema.
      /// </summary>
      public virtual AsyncUnaryCall<global::Sajari.Engine.Schema.Response> AddFieldsAsync(global::Sajari.Engine.Schema.Fields request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AddFieldsAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  AddFields adds new fields to the schema.
      /// </summary>
      public virtual AsyncUnaryCall<global::Sajari.Engine.Schema.Response> AddFieldsAsync(global::Sajari.Engine.Schema.Fields request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddFields, null, options, request);
      }
      /// <summary>
      ///  MutateField mutates a field in the schema.
      /// </summary>
      public virtual global::Sajari.Engine.Schema.Response MutateField(global::Sajari.Engine.Schema.MutateFieldRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return MutateField(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  MutateField mutates a field in the schema.
      /// </summary>
      public virtual global::Sajari.Engine.Schema.Response MutateField(global::Sajari.Engine.Schema.MutateFieldRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_MutateField, null, options, request);
      }
      /// <summary>
      ///  MutateField mutates a field in the schema.
      /// </summary>
      public virtual AsyncUnaryCall<global::Sajari.Engine.Schema.Response> MutateFieldAsync(global::Sajari.Engine.Schema.MutateFieldRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return MutateFieldAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///  MutateField mutates a field in the schema.
      /// </summary>
      public virtual AsyncUnaryCall<global::Sajari.Engine.Schema.Response> MutateFieldAsync(global::Sajari.Engine.Schema.MutateFieldRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_MutateField, null, options, request);
      }
      protected override SchemaClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new SchemaClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    public static ServerServiceDefinition BindService(SchemaBase serviceImpl)
    {
      return ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetFields, serviceImpl.GetFields)
          .AddMethod(__Method_AddFields, serviceImpl.AddFields)
          .AddMethod(__Method_MutateField, serviceImpl.MutateField).Build();
    }

  }
}
#endregion
