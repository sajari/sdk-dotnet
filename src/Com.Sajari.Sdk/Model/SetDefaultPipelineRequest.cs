/*
 * Sajari API
 *
 * Sajari is a smart, highly-configurable, real-time search service that enables thousands of businesses worldwide to provide amazing search experiences on their websites, stores, and applications.
 *
 * The version of the OpenAPI document: v4
 * Contact: support@sajari.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Com.Sajari.Sdk.Client.OpenAPIDateConverter;

namespace Com.Sajari.Sdk.Model
{
    /// <summary>
    /// SetDefaultPipelineRequest
    /// </summary>
    [DataContract(Name = "SetDefaultPipelineRequest")]
    public partial class SetDefaultPipelineRequest : IEquatable<SetDefaultPipelineRequest>, IValidatableObject
    {

        /// <summary>
        /// Gets or Sets Type
        /// </summary>
        [DataMember(Name = "type", IsRequired = true, EmitDefaultValue = false)]
        public PipelineType Type { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="SetDefaultPipelineRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected SetDefaultPipelineRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="SetDefaultPipelineRequest" /> class.
        /// </summary>
        /// <param name="pipeline">The name of the pipeline to use when not otherwise specified. (required).</param>
        /// <param name="type">type (required).</param>
        public SetDefaultPipelineRequest(string pipeline = default(string), PipelineType type = default(PipelineType))
        {
            // to ensure "pipeline" is required (not null)
            if (pipeline == null) {
                throw new ArgumentNullException("pipeline is a required property for SetDefaultPipelineRequest and cannot be null");
            }
            this.Pipeline = pipeline;
            this.Type = type;
        }

        /// <summary>
        /// The name of the pipeline to use when not otherwise specified.
        /// </summary>
        /// <value>The name of the pipeline to use when not otherwise specified.</value>
        [DataMember(Name = "pipeline", IsRequired = true, EmitDefaultValue = false)]
        public string Pipeline { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class SetDefaultPipelineRequest {\n");
            sb.Append("  Pipeline: ").Append(Pipeline).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as SetDefaultPipelineRequest);
        }

        /// <summary>
        /// Returns true if SetDefaultPipelineRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of SetDefaultPipelineRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SetDefaultPipelineRequest input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Pipeline == input.Pipeline ||
                    (this.Pipeline != null &&
                    this.Pipeline.Equals(input.Pipeline))
                ) && 
                (
                    this.Type == input.Type ||
                    this.Type.Equals(input.Type)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Pipeline != null)
                    hashCode = hashCode * 59 + this.Pipeline.GetHashCode();
                hashCode = hashCode * 59 + this.Type.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
