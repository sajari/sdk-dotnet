/*
 * Sajari API
 *
 * Sajari is a smart, highly-configurable, real-time search service that enables thousands of businesses worldwide to provide amazing search experiences on their websites, stores, and applications.
 *
 * The version of the OpenAPI document: v4
 * Contact: support@sajari.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Com.Sajari.Sdk.Client.OpenAPIDateConverter;

namespace Com.Sajari.Sdk.Model
{
    /// <summary>
    /// ListPipelinesResponse
    /// </summary>
    [DataContract(Name = "ListPipelinesResponse")]
    public partial class ListPipelinesResponse : IEquatable<ListPipelinesResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ListPipelinesResponse" /> class.
        /// </summary>
        /// <param name="pipelines">The pipelines from the specified collection..</param>
        /// <param name="nextPageToken">A token, which can be sent as &#x60;page_token&#x60; to retrieve the next page.  If this field is omitted, there are no subsequent pages..</param>
        public ListPipelinesResponse(List<Pipeline> pipelines = default(List<Pipeline>), string nextPageToken = default(string))
        {
            this.Pipelines = pipelines;
            this.NextPageToken = nextPageToken;
        }

        /// <summary>
        /// The pipelines from the specified collection.
        /// </summary>
        /// <value>The pipelines from the specified collection.</value>
        [DataMember(Name = "pipelines", EmitDefaultValue = false)]
        public List<Pipeline> Pipelines { get; set; }

        /// <summary>
        /// A token, which can be sent as &#x60;page_token&#x60; to retrieve the next page.  If this field is omitted, there are no subsequent pages.
        /// </summary>
        /// <value>A token, which can be sent as &#x60;page_token&#x60; to retrieve the next page.  If this field is omitted, there are no subsequent pages.</value>
        [DataMember(Name = "next_page_token", EmitDefaultValue = false)]
        public string NextPageToken { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ListPipelinesResponse {\n");
            sb.Append("  Pipelines: ").Append(Pipelines).Append("\n");
            sb.Append("  NextPageToken: ").Append(NextPageToken).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ListPipelinesResponse);
        }

        /// <summary>
        /// Returns true if ListPipelinesResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of ListPipelinesResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ListPipelinesResponse input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Pipelines == input.Pipelines ||
                    this.Pipelines != null &&
                    input.Pipelines != null &&
                    this.Pipelines.SequenceEqual(input.Pipelines)
                ) && 
                (
                    this.NextPageToken == input.NextPageToken ||
                    (this.NextPageToken != null &&
                    this.NextPageToken.Equals(input.NextPageToken))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Pipelines != null)
                    hashCode = hashCode * 59 + this.Pipelines.GetHashCode();
                if (this.NextPageToken != null)
                    hashCode = hashCode * 59 + this.NextPageToken.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
