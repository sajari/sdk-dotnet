/*
 * Sajari API
 *
 * Sajari is a smart, highly-configurable, real-time search service that enables thousands of businesses worldwide to provide amazing search experiences on their websites, stores, and applications.
 *
 * The version of the OpenAPI document: v4
 * Contact: support@sajari.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using Com.Sajari.Sdk.Client;
using Com.Sajari.Sdk.Model;

namespace Com.Sajari.Sdk.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IPipelinesApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// Create pipeline
        /// </summary>
        /// <remarks>
        /// Create a new pipeline.  Pipelines are immutable once created. If you want to change a pipeline e.g. to add or change some steps, you need to create a new version of that pipeline.  To start using a new pipeline you need to update your record ingestion calls and/or your query calls to specify the new pipeline.  To create the pipeline from YAML, set the request&#39;s &#x60;Content-Type&#x60; header to &#x60;application/yaml&#x60; and submit the pipeline&#39;s YAML in the request body.
        /// </remarks>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection to create the pipeline in, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="pipeline">The pipeline to create.</param>
        /// <returns>Pipeline</returns>
        Pipeline CreatePipeline(string collectionId, Pipeline pipeline);

        /// <summary>
        /// Create pipeline
        /// </summary>
        /// <remarks>
        /// Create a new pipeline.  Pipelines are immutable once created. If you want to change a pipeline e.g. to add or change some steps, you need to create a new version of that pipeline.  To start using a new pipeline you need to update your record ingestion calls and/or your query calls to specify the new pipeline.  To create the pipeline from YAML, set the request&#39;s &#x60;Content-Type&#x60; header to &#x60;application/yaml&#x60; and submit the pipeline&#39;s YAML in the request body.
        /// </remarks>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection to create the pipeline in, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="pipeline">The pipeline to create.</param>
        /// <returns>ApiResponse of Pipeline</returns>
        ApiResponse<Pipeline> CreatePipelineWithHttpInfo(string collectionId, Pipeline pipeline);
        /// <summary>
        /// Generate pipelines
        /// </summary>
        /// <remarks>
        /// Generate basic record, query and autocomplete pipeline templates. Use these templates as a starting point for your collection&#39;s pipelines.  This call returns a set of pipelines that you can pass directly to the create pipeline call.  The generated templates can be returned in JSON, the default, or YAML. To return the generated pipelines in YAML, set the request&#39;s &#x60;Accept&#x60; header to &#x60;application/yaml&#x60;. The three pipelines in the YAML response are separated by three dashes (&#x60;- --&#x60;).
        /// </remarks>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="generatePipelinesRequest"></param>
        /// <returns>GeneratePipelinesResponse</returns>
        GeneratePipelinesResponse GeneratePipelines(string collectionId, GeneratePipelinesRequest generatePipelinesRequest);

        /// <summary>
        /// Generate pipelines
        /// </summary>
        /// <remarks>
        /// Generate basic record, query and autocomplete pipeline templates. Use these templates as a starting point for your collection&#39;s pipelines.  This call returns a set of pipelines that you can pass directly to the create pipeline call.  The generated templates can be returned in JSON, the default, or YAML. To return the generated pipelines in YAML, set the request&#39;s &#x60;Accept&#x60; header to &#x60;application/yaml&#x60;. The three pipelines in the YAML response are separated by three dashes (&#x60;- --&#x60;).
        /// </remarks>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="generatePipelinesRequest"></param>
        /// <returns>ApiResponse of GeneratePipelinesResponse</returns>
        ApiResponse<GeneratePipelinesResponse> GeneratePipelinesWithHttpInfo(string collectionId, GeneratePipelinesRequest generatePipelinesRequest);
        /// <summary>
        /// Get default pipeline
        /// </summary>
        /// <remarks>
        /// Get the default pipeline for a collection.  Every collection has a default record pipeline and a default query pipeline.  When a pipeline is required to complete an operation, it can be omitted from the request if a default pipeline has been set. When adding a record to a collection, the default record pipeline is used if none is provided. When querying a collection, the default query pipeline is used if none is provided.
        /// </remarks>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection to get the default query pipeline of, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="type">The type of the pipeline to get.   - TYPE_UNSPECIFIED: Pipeline type not specified.  - RECORD: Record pipeline.  - QUERY: Query pipeline.</param>
        /// <returns>GetDefaultPipelineResponse</returns>
        GetDefaultPipelineResponse GetDefaultPipeline(string collectionId, string type);

        /// <summary>
        /// Get default pipeline
        /// </summary>
        /// <remarks>
        /// Get the default pipeline for a collection.  Every collection has a default record pipeline and a default query pipeline.  When a pipeline is required to complete an operation, it can be omitted from the request if a default pipeline has been set. When adding a record to a collection, the default record pipeline is used if none is provided. When querying a collection, the default query pipeline is used if none is provided.
        /// </remarks>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection to get the default query pipeline of, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="type">The type of the pipeline to get.   - TYPE_UNSPECIFIED: Pipeline type not specified.  - RECORD: Record pipeline.  - QUERY: Query pipeline.</param>
        /// <returns>ApiResponse of GetDefaultPipelineResponse</returns>
        ApiResponse<GetDefaultPipelineResponse> GetDefaultPipelineWithHttpInfo(string collectionId, string type);
        /// <summary>
        /// Get default pipeline version
        /// </summary>
        /// <remarks>
        /// Get the default version for a given pipeline.  The default version of a pipeline is used when a pipeline is referred to without specifying a version.  This allows you to change the pipeline version used for requests without having to change your code.  To retrieve the pipeline in YAML, set the request&#39;s &#x60;Accept&#x60; header to &#x60;application/yaml&#x60;.
        /// </remarks>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection that owns the pipeline to get the default version of, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="type">The type of the pipeline to get the default version of.</param>
        /// <param name="name">The name of the pipeline to get the default version of, e.g. &#x60;my-pipeline&#x60;.</param>
        /// <param name="view">The amount of information to include in the retrieved pipeline.   - VIEW_UNSPECIFIED: The default / unset value. The API defaults to the &#x60;BASIC&#x60; view.  - BASIC: Include basic information including type, name, version and description but not the full step configuration. This is the default value (for both [ListPipelines](/api#operation/ListPipelines) and [GetPipeline](/api#operation/GetPipeline)).  - FULL: Include the information from &#x60;BASIC&#x60;, plus full step configuration. (optional, default to VIEW_UNSPECIFIED)</param>
        /// <returns>Pipeline</returns>
        Pipeline GetDefaultVersion(string collectionId, string type, string name, string view = default(string));

        /// <summary>
        /// Get default pipeline version
        /// </summary>
        /// <remarks>
        /// Get the default version for a given pipeline.  The default version of a pipeline is used when a pipeline is referred to without specifying a version.  This allows you to change the pipeline version used for requests without having to change your code.  To retrieve the pipeline in YAML, set the request&#39;s &#x60;Accept&#x60; header to &#x60;application/yaml&#x60;.
        /// </remarks>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection that owns the pipeline to get the default version of, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="type">The type of the pipeline to get the default version of.</param>
        /// <param name="name">The name of the pipeline to get the default version of, e.g. &#x60;my-pipeline&#x60;.</param>
        /// <param name="view">The amount of information to include in the retrieved pipeline.   - VIEW_UNSPECIFIED: The default / unset value. The API defaults to the &#x60;BASIC&#x60; view.  - BASIC: Include basic information including type, name, version and description but not the full step configuration. This is the default value (for both [ListPipelines](/api#operation/ListPipelines) and [GetPipeline](/api#operation/GetPipeline)).  - FULL: Include the information from &#x60;BASIC&#x60;, plus full step configuration. (optional, default to VIEW_UNSPECIFIED)</param>
        /// <returns>ApiResponse of Pipeline</returns>
        ApiResponse<Pipeline> GetDefaultVersionWithHttpInfo(string collectionId, string type, string name, string view = default(string));
        /// <summary>
        /// Get pipeline
        /// </summary>
        /// <remarks>
        /// Retrieve the details of a pipeline. Supply the type, name and version.  To retrieve the pipeline in YAML, set the request&#39;s &#x60;Accept&#x60; header to &#x60;application/yaml&#x60;.
        /// </remarks>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection that owns the pipeline, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="type">The type of the pipeline to retrieve.</param>
        /// <param name="name">The name of the pipeline to retrieve, e.g. &#x60;my-pipeline&#x60;.</param>
        /// <param name="version">The version of the pipeline to retrieve, e.g. &#x60;42&#x60;.</param>
        /// <param name="view">The amount of information to include in the retrieved pipeline.   - VIEW_UNSPECIFIED: The default / unset value. The API defaults to the &#x60;BASIC&#x60; view.  - BASIC: Include basic information including type, name, version and description but not the full step configuration. This is the default value (for both [ListPipelines](/api#operation/ListPipelines) and [GetPipeline](/api#operation/GetPipeline)).  - FULL: Include the information from &#x60;BASIC&#x60;, plus full step configuration. (optional, default to VIEW_UNSPECIFIED)</param>
        /// <returns>Pipeline</returns>
        Pipeline GetPipeline(string collectionId, string type, string name, string version, string view = default(string));

        /// <summary>
        /// Get pipeline
        /// </summary>
        /// <remarks>
        /// Retrieve the details of a pipeline. Supply the type, name and version.  To retrieve the pipeline in YAML, set the request&#39;s &#x60;Accept&#x60; header to &#x60;application/yaml&#x60;.
        /// </remarks>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection that owns the pipeline, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="type">The type of the pipeline to retrieve.</param>
        /// <param name="name">The name of the pipeline to retrieve, e.g. &#x60;my-pipeline&#x60;.</param>
        /// <param name="version">The version of the pipeline to retrieve, e.g. &#x60;42&#x60;.</param>
        /// <param name="view">The amount of information to include in the retrieved pipeline.   - VIEW_UNSPECIFIED: The default / unset value. The API defaults to the &#x60;BASIC&#x60; view.  - BASIC: Include basic information including type, name, version and description but not the full step configuration. This is the default value (for both [ListPipelines](/api#operation/ListPipelines) and [GetPipeline](/api#operation/GetPipeline)).  - FULL: Include the information from &#x60;BASIC&#x60;, plus full step configuration. (optional, default to VIEW_UNSPECIFIED)</param>
        /// <returns>ApiResponse of Pipeline</returns>
        ApiResponse<Pipeline> GetPipelineWithHttpInfo(string collectionId, string type, string name, string version, string view = default(string));
        /// <summary>
        /// List pipelines
        /// </summary>
        /// <remarks>
        /// Retrieve a list of pipelines in a collection.
        /// </remarks>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection that owns this set of pipelines, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="pageSize">The maximum number of pipelines to return. The service may return fewer than this value.  If unspecified, at most 50 pipelines are returned.  The maximum value is 1000; values above 1000 are coerced to 1000. (optional)</param>
        /// <param name="pageToken">A page token, received from a previous [ListPipelines](/api#operation/ListPipelines) call.  Provide this to retrieve the subsequent page.  When paginating, all other parameters provided to [ListPipelines](/api#operation/ListPipelines) must match the call that provided the page token. (optional)</param>
        /// <param name="view">The amount of information to include in each retrieved pipeline.   - VIEW_UNSPECIFIED: The default / unset value. The API defaults to the &#x60;BASIC&#x60; view.  - BASIC: Include basic information including type, name, version and description but not the full step configuration. This is the default value (for both [ListPipelines](/api#operation/ListPipelines) and [GetPipeline](/api#operation/GetPipeline)).  - FULL: Include the information from &#x60;BASIC&#x60;, plus full step configuration. (optional, default to VIEW_UNSPECIFIED)</param>
        /// <returns>ListPipelinesResponse</returns>
        ListPipelinesResponse ListPipelines(string collectionId, int? pageSize = default(int?), string pageToken = default(string), string view = default(string));

        /// <summary>
        /// List pipelines
        /// </summary>
        /// <remarks>
        /// Retrieve a list of pipelines in a collection.
        /// </remarks>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection that owns this set of pipelines, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="pageSize">The maximum number of pipelines to return. The service may return fewer than this value.  If unspecified, at most 50 pipelines are returned.  The maximum value is 1000; values above 1000 are coerced to 1000. (optional)</param>
        /// <param name="pageToken">A page token, received from a previous [ListPipelines](/api#operation/ListPipelines) call.  Provide this to retrieve the subsequent page.  When paginating, all other parameters provided to [ListPipelines](/api#operation/ListPipelines) must match the call that provided the page token. (optional)</param>
        /// <param name="view">The amount of information to include in each retrieved pipeline.   - VIEW_UNSPECIFIED: The default / unset value. The API defaults to the &#x60;BASIC&#x60; view.  - BASIC: Include basic information including type, name, version and description but not the full step configuration. This is the default value (for both [ListPipelines](/api#operation/ListPipelines) and [GetPipeline](/api#operation/GetPipeline)).  - FULL: Include the information from &#x60;BASIC&#x60;, plus full step configuration. (optional, default to VIEW_UNSPECIFIED)</param>
        /// <returns>ApiResponse of ListPipelinesResponse</returns>
        ApiResponse<ListPipelinesResponse> ListPipelinesWithHttpInfo(string collectionId, int? pageSize = default(int?), string pageToken = default(string), string view = default(string));
        /// <summary>
        /// Set default pipeline
        /// </summary>
        /// <remarks>
        /// Set the default pipeline for a collection.  Every collection has a default record pipeline and a default query pipeline.  When a pipeline is required to complete an operation, it can be omitted from the request if a default pipeline has been set. When adding a record to a collection, the default record pipeline is used if none is provided. When querying a collection, the default query pipeline is used if none is provided.  Once a default pipeline has been set it cannot be cleared, only set to another pipeline.
        /// </remarks>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection to set the default query pipeline of, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="setDefaultPipelineRequest"></param>
        /// <returns>Object</returns>
        Object SetDefaultPipeline(string collectionId, SetDefaultPipelineRequest setDefaultPipelineRequest);

        /// <summary>
        /// Set default pipeline
        /// </summary>
        /// <remarks>
        /// Set the default pipeline for a collection.  Every collection has a default record pipeline and a default query pipeline.  When a pipeline is required to complete an operation, it can be omitted from the request if a default pipeline has been set. When adding a record to a collection, the default record pipeline is used if none is provided. When querying a collection, the default query pipeline is used if none is provided.  Once a default pipeline has been set it cannot be cleared, only set to another pipeline.
        /// </remarks>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection to set the default query pipeline of, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="setDefaultPipelineRequest"></param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Object> SetDefaultPipelineWithHttpInfo(string collectionId, SetDefaultPipelineRequest setDefaultPipelineRequest);
        /// <summary>
        /// Set default pipeline version
        /// </summary>
        /// <remarks>
        /// Set the default version for a given pipeline.  The default version of a pipeline is used when a pipeline is referred to without specifying a version.  This allows you to change the pipeline version used for requests without having to change your code.
        /// </remarks>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection that owns the pipeline to set the default version of, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="type">The type of the pipeline to set the default version of.</param>
        /// <param name="name">The name of the pipeline to set the default version of, e.g. &#x60;my-pipeline&#x60;.</param>
        /// <param name="setDefaultVersionRequest"></param>
        /// <returns>Object</returns>
        Object SetDefaultVersion(string collectionId, string type, string name, SetDefaultVersionRequest setDefaultVersionRequest);

        /// <summary>
        /// Set default pipeline version
        /// </summary>
        /// <remarks>
        /// Set the default version for a given pipeline.  The default version of a pipeline is used when a pipeline is referred to without specifying a version.  This allows you to change the pipeline version used for requests without having to change your code.
        /// </remarks>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection that owns the pipeline to set the default version of, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="type">The type of the pipeline to set the default version of.</param>
        /// <param name="name">The name of the pipeline to set the default version of, e.g. &#x60;my-pipeline&#x60;.</param>
        /// <param name="setDefaultVersionRequest"></param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Object> SetDefaultVersionWithHttpInfo(string collectionId, string type, string name, SetDefaultVersionRequest setDefaultVersionRequest);
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IPipelinesApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// Create pipeline
        /// </summary>
        /// <remarks>
        /// Create a new pipeline.  Pipelines are immutable once created. If you want to change a pipeline e.g. to add or change some steps, you need to create a new version of that pipeline.  To start using a new pipeline you need to update your record ingestion calls and/or your query calls to specify the new pipeline.  To create the pipeline from YAML, set the request&#39;s &#x60;Content-Type&#x60; header to &#x60;application/yaml&#x60; and submit the pipeline&#39;s YAML in the request body.
        /// </remarks>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection to create the pipeline in, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="pipeline">The pipeline to create.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Pipeline</returns>
        System.Threading.Tasks.Task<Pipeline> CreatePipelineAsync(string collectionId, Pipeline pipeline, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Create pipeline
        /// </summary>
        /// <remarks>
        /// Create a new pipeline.  Pipelines are immutable once created. If you want to change a pipeline e.g. to add or change some steps, you need to create a new version of that pipeline.  To start using a new pipeline you need to update your record ingestion calls and/or your query calls to specify the new pipeline.  To create the pipeline from YAML, set the request&#39;s &#x60;Content-Type&#x60; header to &#x60;application/yaml&#x60; and submit the pipeline&#39;s YAML in the request body.
        /// </remarks>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection to create the pipeline in, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="pipeline">The pipeline to create.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Pipeline)</returns>
        System.Threading.Tasks.Task<ApiResponse<Pipeline>> CreatePipelineWithHttpInfoAsync(string collectionId, Pipeline pipeline, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Generate pipelines
        /// </summary>
        /// <remarks>
        /// Generate basic record, query and autocomplete pipeline templates. Use these templates as a starting point for your collection&#39;s pipelines.  This call returns a set of pipelines that you can pass directly to the create pipeline call.  The generated templates can be returned in JSON, the default, or YAML. To return the generated pipelines in YAML, set the request&#39;s &#x60;Accept&#x60; header to &#x60;application/yaml&#x60;. The three pipelines in the YAML response are separated by three dashes (&#x60;- --&#x60;).
        /// </remarks>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="generatePipelinesRequest"></param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of GeneratePipelinesResponse</returns>
        System.Threading.Tasks.Task<GeneratePipelinesResponse> GeneratePipelinesAsync(string collectionId, GeneratePipelinesRequest generatePipelinesRequest, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Generate pipelines
        /// </summary>
        /// <remarks>
        /// Generate basic record, query and autocomplete pipeline templates. Use these templates as a starting point for your collection&#39;s pipelines.  This call returns a set of pipelines that you can pass directly to the create pipeline call.  The generated templates can be returned in JSON, the default, or YAML. To return the generated pipelines in YAML, set the request&#39;s &#x60;Accept&#x60; header to &#x60;application/yaml&#x60;. The three pipelines in the YAML response are separated by three dashes (&#x60;- --&#x60;).
        /// </remarks>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="generatePipelinesRequest"></param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (GeneratePipelinesResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<GeneratePipelinesResponse>> GeneratePipelinesWithHttpInfoAsync(string collectionId, GeneratePipelinesRequest generatePipelinesRequest, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Get default pipeline
        /// </summary>
        /// <remarks>
        /// Get the default pipeline for a collection.  Every collection has a default record pipeline and a default query pipeline.  When a pipeline is required to complete an operation, it can be omitted from the request if a default pipeline has been set. When adding a record to a collection, the default record pipeline is used if none is provided. When querying a collection, the default query pipeline is used if none is provided.
        /// </remarks>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection to get the default query pipeline of, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="type">The type of the pipeline to get.   - TYPE_UNSPECIFIED: Pipeline type not specified.  - RECORD: Record pipeline.  - QUERY: Query pipeline.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of GetDefaultPipelineResponse</returns>
        System.Threading.Tasks.Task<GetDefaultPipelineResponse> GetDefaultPipelineAsync(string collectionId, string type, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Get default pipeline
        /// </summary>
        /// <remarks>
        /// Get the default pipeline for a collection.  Every collection has a default record pipeline and a default query pipeline.  When a pipeline is required to complete an operation, it can be omitted from the request if a default pipeline has been set. When adding a record to a collection, the default record pipeline is used if none is provided. When querying a collection, the default query pipeline is used if none is provided.
        /// </remarks>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection to get the default query pipeline of, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="type">The type of the pipeline to get.   - TYPE_UNSPECIFIED: Pipeline type not specified.  - RECORD: Record pipeline.  - QUERY: Query pipeline.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (GetDefaultPipelineResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<GetDefaultPipelineResponse>> GetDefaultPipelineWithHttpInfoAsync(string collectionId, string type, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Get default pipeline version
        /// </summary>
        /// <remarks>
        /// Get the default version for a given pipeline.  The default version of a pipeline is used when a pipeline is referred to without specifying a version.  This allows you to change the pipeline version used for requests without having to change your code.  To retrieve the pipeline in YAML, set the request&#39;s &#x60;Accept&#x60; header to &#x60;application/yaml&#x60;.
        /// </remarks>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection that owns the pipeline to get the default version of, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="type">The type of the pipeline to get the default version of.</param>
        /// <param name="name">The name of the pipeline to get the default version of, e.g. &#x60;my-pipeline&#x60;.</param>
        /// <param name="view">The amount of information to include in the retrieved pipeline.   - VIEW_UNSPECIFIED: The default / unset value. The API defaults to the &#x60;BASIC&#x60; view.  - BASIC: Include basic information including type, name, version and description but not the full step configuration. This is the default value (for both [ListPipelines](/api#operation/ListPipelines) and [GetPipeline](/api#operation/GetPipeline)).  - FULL: Include the information from &#x60;BASIC&#x60;, plus full step configuration. (optional, default to VIEW_UNSPECIFIED)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Pipeline</returns>
        System.Threading.Tasks.Task<Pipeline> GetDefaultVersionAsync(string collectionId, string type, string name, string view = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Get default pipeline version
        /// </summary>
        /// <remarks>
        /// Get the default version for a given pipeline.  The default version of a pipeline is used when a pipeline is referred to without specifying a version.  This allows you to change the pipeline version used for requests without having to change your code.  To retrieve the pipeline in YAML, set the request&#39;s &#x60;Accept&#x60; header to &#x60;application/yaml&#x60;.
        /// </remarks>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection that owns the pipeline to get the default version of, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="type">The type of the pipeline to get the default version of.</param>
        /// <param name="name">The name of the pipeline to get the default version of, e.g. &#x60;my-pipeline&#x60;.</param>
        /// <param name="view">The amount of information to include in the retrieved pipeline.   - VIEW_UNSPECIFIED: The default / unset value. The API defaults to the &#x60;BASIC&#x60; view.  - BASIC: Include basic information including type, name, version and description but not the full step configuration. This is the default value (for both [ListPipelines](/api#operation/ListPipelines) and [GetPipeline](/api#operation/GetPipeline)).  - FULL: Include the information from &#x60;BASIC&#x60;, plus full step configuration. (optional, default to VIEW_UNSPECIFIED)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Pipeline)</returns>
        System.Threading.Tasks.Task<ApiResponse<Pipeline>> GetDefaultVersionWithHttpInfoAsync(string collectionId, string type, string name, string view = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Get pipeline
        /// </summary>
        /// <remarks>
        /// Retrieve the details of a pipeline. Supply the type, name and version.  To retrieve the pipeline in YAML, set the request&#39;s &#x60;Accept&#x60; header to &#x60;application/yaml&#x60;.
        /// </remarks>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection that owns the pipeline, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="type">The type of the pipeline to retrieve.</param>
        /// <param name="name">The name of the pipeline to retrieve, e.g. &#x60;my-pipeline&#x60;.</param>
        /// <param name="version">The version of the pipeline to retrieve, e.g. &#x60;42&#x60;.</param>
        /// <param name="view">The amount of information to include in the retrieved pipeline.   - VIEW_UNSPECIFIED: The default / unset value. The API defaults to the &#x60;BASIC&#x60; view.  - BASIC: Include basic information including type, name, version and description but not the full step configuration. This is the default value (for both [ListPipelines](/api#operation/ListPipelines) and [GetPipeline](/api#operation/GetPipeline)).  - FULL: Include the information from &#x60;BASIC&#x60;, plus full step configuration. (optional, default to VIEW_UNSPECIFIED)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Pipeline</returns>
        System.Threading.Tasks.Task<Pipeline> GetPipelineAsync(string collectionId, string type, string name, string version, string view = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Get pipeline
        /// </summary>
        /// <remarks>
        /// Retrieve the details of a pipeline. Supply the type, name and version.  To retrieve the pipeline in YAML, set the request&#39;s &#x60;Accept&#x60; header to &#x60;application/yaml&#x60;.
        /// </remarks>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection that owns the pipeline, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="type">The type of the pipeline to retrieve.</param>
        /// <param name="name">The name of the pipeline to retrieve, e.g. &#x60;my-pipeline&#x60;.</param>
        /// <param name="version">The version of the pipeline to retrieve, e.g. &#x60;42&#x60;.</param>
        /// <param name="view">The amount of information to include in the retrieved pipeline.   - VIEW_UNSPECIFIED: The default / unset value. The API defaults to the &#x60;BASIC&#x60; view.  - BASIC: Include basic information including type, name, version and description but not the full step configuration. This is the default value (for both [ListPipelines](/api#operation/ListPipelines) and [GetPipeline](/api#operation/GetPipeline)).  - FULL: Include the information from &#x60;BASIC&#x60;, plus full step configuration. (optional, default to VIEW_UNSPECIFIED)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Pipeline)</returns>
        System.Threading.Tasks.Task<ApiResponse<Pipeline>> GetPipelineWithHttpInfoAsync(string collectionId, string type, string name, string version, string view = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// List pipelines
        /// </summary>
        /// <remarks>
        /// Retrieve a list of pipelines in a collection.
        /// </remarks>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection that owns this set of pipelines, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="pageSize">The maximum number of pipelines to return. The service may return fewer than this value.  If unspecified, at most 50 pipelines are returned.  The maximum value is 1000; values above 1000 are coerced to 1000. (optional)</param>
        /// <param name="pageToken">A page token, received from a previous [ListPipelines](/api#operation/ListPipelines) call.  Provide this to retrieve the subsequent page.  When paginating, all other parameters provided to [ListPipelines](/api#operation/ListPipelines) must match the call that provided the page token. (optional)</param>
        /// <param name="view">The amount of information to include in each retrieved pipeline.   - VIEW_UNSPECIFIED: The default / unset value. The API defaults to the &#x60;BASIC&#x60; view.  - BASIC: Include basic information including type, name, version and description but not the full step configuration. This is the default value (for both [ListPipelines](/api#operation/ListPipelines) and [GetPipeline](/api#operation/GetPipeline)).  - FULL: Include the information from &#x60;BASIC&#x60;, plus full step configuration. (optional, default to VIEW_UNSPECIFIED)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ListPipelinesResponse</returns>
        System.Threading.Tasks.Task<ListPipelinesResponse> ListPipelinesAsync(string collectionId, int? pageSize = default(int?), string pageToken = default(string), string view = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// List pipelines
        /// </summary>
        /// <remarks>
        /// Retrieve a list of pipelines in a collection.
        /// </remarks>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection that owns this set of pipelines, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="pageSize">The maximum number of pipelines to return. The service may return fewer than this value.  If unspecified, at most 50 pipelines are returned.  The maximum value is 1000; values above 1000 are coerced to 1000. (optional)</param>
        /// <param name="pageToken">A page token, received from a previous [ListPipelines](/api#operation/ListPipelines) call.  Provide this to retrieve the subsequent page.  When paginating, all other parameters provided to [ListPipelines](/api#operation/ListPipelines) must match the call that provided the page token. (optional)</param>
        /// <param name="view">The amount of information to include in each retrieved pipeline.   - VIEW_UNSPECIFIED: The default / unset value. The API defaults to the &#x60;BASIC&#x60; view.  - BASIC: Include basic information including type, name, version and description but not the full step configuration. This is the default value (for both [ListPipelines](/api#operation/ListPipelines) and [GetPipeline](/api#operation/GetPipeline)).  - FULL: Include the information from &#x60;BASIC&#x60;, plus full step configuration. (optional, default to VIEW_UNSPECIFIED)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ListPipelinesResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<ListPipelinesResponse>> ListPipelinesWithHttpInfoAsync(string collectionId, int? pageSize = default(int?), string pageToken = default(string), string view = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Set default pipeline
        /// </summary>
        /// <remarks>
        /// Set the default pipeline for a collection.  Every collection has a default record pipeline and a default query pipeline.  When a pipeline is required to complete an operation, it can be omitted from the request if a default pipeline has been set. When adding a record to a collection, the default record pipeline is used if none is provided. When querying a collection, the default query pipeline is used if none is provided.  Once a default pipeline has been set it cannot be cleared, only set to another pipeline.
        /// </remarks>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection to set the default query pipeline of, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="setDefaultPipelineRequest"></param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Object> SetDefaultPipelineAsync(string collectionId, SetDefaultPipelineRequest setDefaultPipelineRequest, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Set default pipeline
        /// </summary>
        /// <remarks>
        /// Set the default pipeline for a collection.  Every collection has a default record pipeline and a default query pipeline.  When a pipeline is required to complete an operation, it can be omitted from the request if a default pipeline has been set. When adding a record to a collection, the default record pipeline is used if none is provided. When querying a collection, the default query pipeline is used if none is provided.  Once a default pipeline has been set it cannot be cleared, only set to another pipeline.
        /// </remarks>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection to set the default query pipeline of, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="setDefaultPipelineRequest"></param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> SetDefaultPipelineWithHttpInfoAsync(string collectionId, SetDefaultPipelineRequest setDefaultPipelineRequest, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Set default pipeline version
        /// </summary>
        /// <remarks>
        /// Set the default version for a given pipeline.  The default version of a pipeline is used when a pipeline is referred to without specifying a version.  This allows you to change the pipeline version used for requests without having to change your code.
        /// </remarks>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection that owns the pipeline to set the default version of, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="type">The type of the pipeline to set the default version of.</param>
        /// <param name="name">The name of the pipeline to set the default version of, e.g. &#x60;my-pipeline&#x60;.</param>
        /// <param name="setDefaultVersionRequest"></param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Object> SetDefaultVersionAsync(string collectionId, string type, string name, SetDefaultVersionRequest setDefaultVersionRequest, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Set default pipeline version
        /// </summary>
        /// <remarks>
        /// Set the default version for a given pipeline.  The default version of a pipeline is used when a pipeline is referred to without specifying a version.  This allows you to change the pipeline version used for requests without having to change your code.
        /// </remarks>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection that owns the pipeline to set the default version of, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="type">The type of the pipeline to set the default version of.</param>
        /// <param name="name">The name of the pipeline to set the default version of, e.g. &#x60;my-pipeline&#x60;.</param>
        /// <param name="setDefaultVersionRequest"></param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> SetDefaultVersionWithHttpInfoAsync(string collectionId, string type, string name, SetDefaultVersionRequest setDefaultVersionRequest, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IPipelinesApi : IPipelinesApiSync, IPipelinesApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class PipelinesApi : IPipelinesApi
    {
        private Com.Sajari.Sdk.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="PipelinesApi"/> class.
        /// </summary>
        /// <returns></returns>
        public PipelinesApi() : this((string)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="PipelinesApi"/> class.
        /// </summary>
        /// <returns></returns>
        public PipelinesApi(string basePath)
        {
            this.Configuration = Com.Sajari.Sdk.Client.Configuration.MergeConfigurations(
                Com.Sajari.Sdk.Client.GlobalConfiguration.Instance,
                new Com.Sajari.Sdk.Client.Configuration { BasePath = basePath }
            );
            this.Client = new Com.Sajari.Sdk.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Com.Sajari.Sdk.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = Com.Sajari.Sdk.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="PipelinesApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public PipelinesApi(Com.Sajari.Sdk.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = Com.Sajari.Sdk.Client.Configuration.MergeConfigurations(
                Com.Sajari.Sdk.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new Com.Sajari.Sdk.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Com.Sajari.Sdk.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = Com.Sajari.Sdk.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="PipelinesApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public PipelinesApi(Com.Sajari.Sdk.Client.ISynchronousClient client, Com.Sajari.Sdk.Client.IAsynchronousClient asyncClient, Com.Sajari.Sdk.Client.IReadableConfiguration configuration)
        {
            if (client == null) throw new ArgumentNullException("client");
            if (asyncClient == null) throw new ArgumentNullException("asyncClient");
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = Com.Sajari.Sdk.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public Com.Sajari.Sdk.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public Com.Sajari.Sdk.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public string GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public Com.Sajari.Sdk.Client.IReadableConfiguration Configuration { get; set; }

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public Com.Sajari.Sdk.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Create pipeline Create a new pipeline.  Pipelines are immutable once created. If you want to change a pipeline e.g. to add or change some steps, you need to create a new version of that pipeline.  To start using a new pipeline you need to update your record ingestion calls and/or your query calls to specify the new pipeline.  To create the pipeline from YAML, set the request&#39;s &#x60;Content-Type&#x60; header to &#x60;application/yaml&#x60; and submit the pipeline&#39;s YAML in the request body.
        /// </summary>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection to create the pipeline in, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="pipeline">The pipeline to create.</param>
        /// <returns>Pipeline</returns>
        public Pipeline CreatePipeline(string collectionId, Pipeline pipeline)
        {
            Com.Sajari.Sdk.Client.ApiResponse<Pipeline> localVarResponse = CreatePipelineWithHttpInfo(collectionId, pipeline);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Create pipeline Create a new pipeline.  Pipelines are immutable once created. If you want to change a pipeline e.g. to add or change some steps, you need to create a new version of that pipeline.  To start using a new pipeline you need to update your record ingestion calls and/or your query calls to specify the new pipeline.  To create the pipeline from YAML, set the request&#39;s &#x60;Content-Type&#x60; header to &#x60;application/yaml&#x60; and submit the pipeline&#39;s YAML in the request body.
        /// </summary>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection to create the pipeline in, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="pipeline">The pipeline to create.</param>
        /// <returns>ApiResponse of Pipeline</returns>
        public Com.Sajari.Sdk.Client.ApiResponse<Pipeline> CreatePipelineWithHttpInfo(string collectionId, Pipeline pipeline)
        {
            // verify the required parameter 'collectionId' is set
            if (collectionId == null)
                throw new Com.Sajari.Sdk.Client.ApiException(400, "Missing required parameter 'collectionId' when calling PipelinesApi->CreatePipeline");

            // verify the required parameter 'pipeline' is set
            if (pipeline == null)
                throw new Com.Sajari.Sdk.Client.ApiException(400, "Missing required parameter 'pipeline' when calling PipelinesApi->CreatePipeline");

            Com.Sajari.Sdk.Client.RequestOptions localVarRequestOptions = new Com.Sajari.Sdk.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json",
                "application/yaml"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "application/yaml"
            };

            var localVarContentType = Com.Sajari.Sdk.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Com.Sajari.Sdk.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("collection_id", Com.Sajari.Sdk.Client.ClientUtils.ParameterToString(collectionId)); // path parameter
            localVarRequestOptions.Data = pipeline;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Com.Sajari.Sdk.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<Pipeline>("/v4/collections/{collection_id}/pipelines", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("CreatePipeline", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// Create pipeline Create a new pipeline.  Pipelines are immutable once created. If you want to change a pipeline e.g. to add or change some steps, you need to create a new version of that pipeline.  To start using a new pipeline you need to update your record ingestion calls and/or your query calls to specify the new pipeline.  To create the pipeline from YAML, set the request&#39;s &#x60;Content-Type&#x60; header to &#x60;application/yaml&#x60; and submit the pipeline&#39;s YAML in the request body.
        /// </summary>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection to create the pipeline in, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="pipeline">The pipeline to create.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Pipeline</returns>
        public async System.Threading.Tasks.Task<Pipeline> CreatePipelineAsync(string collectionId, Pipeline pipeline, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Com.Sajari.Sdk.Client.ApiResponse<Pipeline> localVarResponse = await CreatePipelineWithHttpInfoAsync(collectionId, pipeline, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Create pipeline Create a new pipeline.  Pipelines are immutable once created. If you want to change a pipeline e.g. to add or change some steps, you need to create a new version of that pipeline.  To start using a new pipeline you need to update your record ingestion calls and/or your query calls to specify the new pipeline.  To create the pipeline from YAML, set the request&#39;s &#x60;Content-Type&#x60; header to &#x60;application/yaml&#x60; and submit the pipeline&#39;s YAML in the request body.
        /// </summary>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection to create the pipeline in, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="pipeline">The pipeline to create.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Pipeline)</returns>
        public async System.Threading.Tasks.Task<Com.Sajari.Sdk.Client.ApiResponse<Pipeline>> CreatePipelineWithHttpInfoAsync(string collectionId, Pipeline pipeline, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'collectionId' is set
            if (collectionId == null)
                throw new Com.Sajari.Sdk.Client.ApiException(400, "Missing required parameter 'collectionId' when calling PipelinesApi->CreatePipeline");

            // verify the required parameter 'pipeline' is set
            if (pipeline == null)
                throw new Com.Sajari.Sdk.Client.ApiException(400, "Missing required parameter 'pipeline' when calling PipelinesApi->CreatePipeline");


            Com.Sajari.Sdk.Client.RequestOptions localVarRequestOptions = new Com.Sajari.Sdk.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json", 
                "application/yaml"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "application/yaml"
            };


            var localVarContentType = Com.Sajari.Sdk.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Com.Sajari.Sdk.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("collection_id", Com.Sajari.Sdk.Client.ClientUtils.ParameterToString(collectionId)); // path parameter
            localVarRequestOptions.Data = pipeline;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Com.Sajari.Sdk.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }

            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Pipeline>("/v4/collections/{collection_id}/pipelines", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("CreatePipeline", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// Generate pipelines Generate basic record, query and autocomplete pipeline templates. Use these templates as a starting point for your collection&#39;s pipelines.  This call returns a set of pipelines that you can pass directly to the create pipeline call.  The generated templates can be returned in JSON, the default, or YAML. To return the generated pipelines in YAML, set the request&#39;s &#x60;Accept&#x60; header to &#x60;application/yaml&#x60;. The three pipelines in the YAML response are separated by three dashes (&#x60;- --&#x60;).
        /// </summary>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="generatePipelinesRequest"></param>
        /// <returns>GeneratePipelinesResponse</returns>
        public GeneratePipelinesResponse GeneratePipelines(string collectionId, GeneratePipelinesRequest generatePipelinesRequest)
        {
            Com.Sajari.Sdk.Client.ApiResponse<GeneratePipelinesResponse> localVarResponse = GeneratePipelinesWithHttpInfo(collectionId, generatePipelinesRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Generate pipelines Generate basic record, query and autocomplete pipeline templates. Use these templates as a starting point for your collection&#39;s pipelines.  This call returns a set of pipelines that you can pass directly to the create pipeline call.  The generated templates can be returned in JSON, the default, or YAML. To return the generated pipelines in YAML, set the request&#39;s &#x60;Accept&#x60; header to &#x60;application/yaml&#x60;. The three pipelines in the YAML response are separated by three dashes (&#x60;- --&#x60;).
        /// </summary>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="generatePipelinesRequest"></param>
        /// <returns>ApiResponse of GeneratePipelinesResponse</returns>
        public Com.Sajari.Sdk.Client.ApiResponse<GeneratePipelinesResponse> GeneratePipelinesWithHttpInfo(string collectionId, GeneratePipelinesRequest generatePipelinesRequest)
        {
            // verify the required parameter 'collectionId' is set
            if (collectionId == null)
                throw new Com.Sajari.Sdk.Client.ApiException(400, "Missing required parameter 'collectionId' when calling PipelinesApi->GeneratePipelines");

            // verify the required parameter 'generatePipelinesRequest' is set
            if (generatePipelinesRequest == null)
                throw new Com.Sajari.Sdk.Client.ApiException(400, "Missing required parameter 'generatePipelinesRequest' when calling PipelinesApi->GeneratePipelines");

            Com.Sajari.Sdk.Client.RequestOptions localVarRequestOptions = new Com.Sajari.Sdk.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "application/yaml"
            };

            var localVarContentType = Com.Sajari.Sdk.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Com.Sajari.Sdk.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("collection_id", Com.Sajari.Sdk.Client.ClientUtils.ParameterToString(collectionId)); // path parameter
            localVarRequestOptions.Data = generatePipelinesRequest;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Com.Sajari.Sdk.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<GeneratePipelinesResponse>("/v4/collections/{collection_id}:generatePipelines", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GeneratePipelines", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// Generate pipelines Generate basic record, query and autocomplete pipeline templates. Use these templates as a starting point for your collection&#39;s pipelines.  This call returns a set of pipelines that you can pass directly to the create pipeline call.  The generated templates can be returned in JSON, the default, or YAML. To return the generated pipelines in YAML, set the request&#39;s &#x60;Accept&#x60; header to &#x60;application/yaml&#x60;. The three pipelines in the YAML response are separated by three dashes (&#x60;- --&#x60;).
        /// </summary>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="generatePipelinesRequest"></param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of GeneratePipelinesResponse</returns>
        public async System.Threading.Tasks.Task<GeneratePipelinesResponse> GeneratePipelinesAsync(string collectionId, GeneratePipelinesRequest generatePipelinesRequest, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Com.Sajari.Sdk.Client.ApiResponse<GeneratePipelinesResponse> localVarResponse = await GeneratePipelinesWithHttpInfoAsync(collectionId, generatePipelinesRequest, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Generate pipelines Generate basic record, query and autocomplete pipeline templates. Use these templates as a starting point for your collection&#39;s pipelines.  This call returns a set of pipelines that you can pass directly to the create pipeline call.  The generated templates can be returned in JSON, the default, or YAML. To return the generated pipelines in YAML, set the request&#39;s &#x60;Accept&#x60; header to &#x60;application/yaml&#x60;. The three pipelines in the YAML response are separated by three dashes (&#x60;- --&#x60;).
        /// </summary>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="generatePipelinesRequest"></param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (GeneratePipelinesResponse)</returns>
        public async System.Threading.Tasks.Task<Com.Sajari.Sdk.Client.ApiResponse<GeneratePipelinesResponse>> GeneratePipelinesWithHttpInfoAsync(string collectionId, GeneratePipelinesRequest generatePipelinesRequest, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'collectionId' is set
            if (collectionId == null)
                throw new Com.Sajari.Sdk.Client.ApiException(400, "Missing required parameter 'collectionId' when calling PipelinesApi->GeneratePipelines");

            // verify the required parameter 'generatePipelinesRequest' is set
            if (generatePipelinesRequest == null)
                throw new Com.Sajari.Sdk.Client.ApiException(400, "Missing required parameter 'generatePipelinesRequest' when calling PipelinesApi->GeneratePipelines");


            Com.Sajari.Sdk.Client.RequestOptions localVarRequestOptions = new Com.Sajari.Sdk.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "application/yaml"
            };


            var localVarContentType = Com.Sajari.Sdk.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Com.Sajari.Sdk.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("collection_id", Com.Sajari.Sdk.Client.ClientUtils.ParameterToString(collectionId)); // path parameter
            localVarRequestOptions.Data = generatePipelinesRequest;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Com.Sajari.Sdk.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }

            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<GeneratePipelinesResponse>("/v4/collections/{collection_id}:generatePipelines", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GeneratePipelines", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get default pipeline Get the default pipeline for a collection.  Every collection has a default record pipeline and a default query pipeline.  When a pipeline is required to complete an operation, it can be omitted from the request if a default pipeline has been set. When adding a record to a collection, the default record pipeline is used if none is provided. When querying a collection, the default query pipeline is used if none is provided.
        /// </summary>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection to get the default query pipeline of, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="type">The type of the pipeline to get.   - TYPE_UNSPECIFIED: Pipeline type not specified.  - RECORD: Record pipeline.  - QUERY: Query pipeline.</param>
        /// <returns>GetDefaultPipelineResponse</returns>
        public GetDefaultPipelineResponse GetDefaultPipeline(string collectionId, string type)
        {
            Com.Sajari.Sdk.Client.ApiResponse<GetDefaultPipelineResponse> localVarResponse = GetDefaultPipelineWithHttpInfo(collectionId, type);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get default pipeline Get the default pipeline for a collection.  Every collection has a default record pipeline and a default query pipeline.  When a pipeline is required to complete an operation, it can be omitted from the request if a default pipeline has been set. When adding a record to a collection, the default record pipeline is used if none is provided. When querying a collection, the default query pipeline is used if none is provided.
        /// </summary>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection to get the default query pipeline of, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="type">The type of the pipeline to get.   - TYPE_UNSPECIFIED: Pipeline type not specified.  - RECORD: Record pipeline.  - QUERY: Query pipeline.</param>
        /// <returns>ApiResponse of GetDefaultPipelineResponse</returns>
        public Com.Sajari.Sdk.Client.ApiResponse<GetDefaultPipelineResponse> GetDefaultPipelineWithHttpInfo(string collectionId, string type)
        {
            // verify the required parameter 'collectionId' is set
            if (collectionId == null)
                throw new Com.Sajari.Sdk.Client.ApiException(400, "Missing required parameter 'collectionId' when calling PipelinesApi->GetDefaultPipeline");

            // verify the required parameter 'type' is set
            if (type == null)
                throw new Com.Sajari.Sdk.Client.ApiException(400, "Missing required parameter 'type' when calling PipelinesApi->GetDefaultPipeline");

            Com.Sajari.Sdk.Client.RequestOptions localVarRequestOptions = new Com.Sajari.Sdk.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Com.Sajari.Sdk.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Com.Sajari.Sdk.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("collection_id", Com.Sajari.Sdk.Client.ClientUtils.ParameterToString(collectionId)); // path parameter
            localVarRequestOptions.QueryParameters.Add(Com.Sajari.Sdk.Client.ClientUtils.ParameterToMultiMap("", "type", type));

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Com.Sajari.Sdk.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<GetDefaultPipelineResponse>("/v4/collections/{collection_id}:getDefaultPipeline", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetDefaultPipeline", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get default pipeline Get the default pipeline for a collection.  Every collection has a default record pipeline and a default query pipeline.  When a pipeline is required to complete an operation, it can be omitted from the request if a default pipeline has been set. When adding a record to a collection, the default record pipeline is used if none is provided. When querying a collection, the default query pipeline is used if none is provided.
        /// </summary>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection to get the default query pipeline of, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="type">The type of the pipeline to get.   - TYPE_UNSPECIFIED: Pipeline type not specified.  - RECORD: Record pipeline.  - QUERY: Query pipeline.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of GetDefaultPipelineResponse</returns>
        public async System.Threading.Tasks.Task<GetDefaultPipelineResponse> GetDefaultPipelineAsync(string collectionId, string type, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Com.Sajari.Sdk.Client.ApiResponse<GetDefaultPipelineResponse> localVarResponse = await GetDefaultPipelineWithHttpInfoAsync(collectionId, type, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get default pipeline Get the default pipeline for a collection.  Every collection has a default record pipeline and a default query pipeline.  When a pipeline is required to complete an operation, it can be omitted from the request if a default pipeline has been set. When adding a record to a collection, the default record pipeline is used if none is provided. When querying a collection, the default query pipeline is used if none is provided.
        /// </summary>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection to get the default query pipeline of, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="type">The type of the pipeline to get.   - TYPE_UNSPECIFIED: Pipeline type not specified.  - RECORD: Record pipeline.  - QUERY: Query pipeline.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (GetDefaultPipelineResponse)</returns>
        public async System.Threading.Tasks.Task<Com.Sajari.Sdk.Client.ApiResponse<GetDefaultPipelineResponse>> GetDefaultPipelineWithHttpInfoAsync(string collectionId, string type, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'collectionId' is set
            if (collectionId == null)
                throw new Com.Sajari.Sdk.Client.ApiException(400, "Missing required parameter 'collectionId' when calling PipelinesApi->GetDefaultPipeline");

            // verify the required parameter 'type' is set
            if (type == null)
                throw new Com.Sajari.Sdk.Client.ApiException(400, "Missing required parameter 'type' when calling PipelinesApi->GetDefaultPipeline");


            Com.Sajari.Sdk.Client.RequestOptions localVarRequestOptions = new Com.Sajari.Sdk.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };


            var localVarContentType = Com.Sajari.Sdk.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Com.Sajari.Sdk.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("collection_id", Com.Sajari.Sdk.Client.ClientUtils.ParameterToString(collectionId)); // path parameter
            localVarRequestOptions.QueryParameters.Add(Com.Sajari.Sdk.Client.ClientUtils.ParameterToMultiMap("", "type", type));

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Com.Sajari.Sdk.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }

            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<GetDefaultPipelineResponse>("/v4/collections/{collection_id}:getDefaultPipeline", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetDefaultPipeline", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get default pipeline version Get the default version for a given pipeline.  The default version of a pipeline is used when a pipeline is referred to without specifying a version.  This allows you to change the pipeline version used for requests without having to change your code.  To retrieve the pipeline in YAML, set the request&#39;s &#x60;Accept&#x60; header to &#x60;application/yaml&#x60;.
        /// </summary>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection that owns the pipeline to get the default version of, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="type">The type of the pipeline to get the default version of.</param>
        /// <param name="name">The name of the pipeline to get the default version of, e.g. &#x60;my-pipeline&#x60;.</param>
        /// <param name="view">The amount of information to include in the retrieved pipeline.   - VIEW_UNSPECIFIED: The default / unset value. The API defaults to the &#x60;BASIC&#x60; view.  - BASIC: Include basic information including type, name, version and description but not the full step configuration. This is the default value (for both [ListPipelines](/api#operation/ListPipelines) and [GetPipeline](/api#operation/GetPipeline)).  - FULL: Include the information from &#x60;BASIC&#x60;, plus full step configuration. (optional, default to VIEW_UNSPECIFIED)</param>
        /// <returns>Pipeline</returns>
        public Pipeline GetDefaultVersion(string collectionId, string type, string name, string view = default(string))
        {
            Com.Sajari.Sdk.Client.ApiResponse<Pipeline> localVarResponse = GetDefaultVersionWithHttpInfo(collectionId, type, name, view);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get default pipeline version Get the default version for a given pipeline.  The default version of a pipeline is used when a pipeline is referred to without specifying a version.  This allows you to change the pipeline version used for requests without having to change your code.  To retrieve the pipeline in YAML, set the request&#39;s &#x60;Accept&#x60; header to &#x60;application/yaml&#x60;.
        /// </summary>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection that owns the pipeline to get the default version of, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="type">The type of the pipeline to get the default version of.</param>
        /// <param name="name">The name of the pipeline to get the default version of, e.g. &#x60;my-pipeline&#x60;.</param>
        /// <param name="view">The amount of information to include in the retrieved pipeline.   - VIEW_UNSPECIFIED: The default / unset value. The API defaults to the &#x60;BASIC&#x60; view.  - BASIC: Include basic information including type, name, version and description but not the full step configuration. This is the default value (for both [ListPipelines](/api#operation/ListPipelines) and [GetPipeline](/api#operation/GetPipeline)).  - FULL: Include the information from &#x60;BASIC&#x60;, plus full step configuration. (optional, default to VIEW_UNSPECIFIED)</param>
        /// <returns>ApiResponse of Pipeline</returns>
        public Com.Sajari.Sdk.Client.ApiResponse<Pipeline> GetDefaultVersionWithHttpInfo(string collectionId, string type, string name, string view = default(string))
        {
            // verify the required parameter 'collectionId' is set
            if (collectionId == null)
                throw new Com.Sajari.Sdk.Client.ApiException(400, "Missing required parameter 'collectionId' when calling PipelinesApi->GetDefaultVersion");

            // verify the required parameter 'type' is set
            if (type == null)
                throw new Com.Sajari.Sdk.Client.ApiException(400, "Missing required parameter 'type' when calling PipelinesApi->GetDefaultVersion");

            // verify the required parameter 'name' is set
            if (name == null)
                throw new Com.Sajari.Sdk.Client.ApiException(400, "Missing required parameter 'name' when calling PipelinesApi->GetDefaultVersion");

            Com.Sajari.Sdk.Client.RequestOptions localVarRequestOptions = new Com.Sajari.Sdk.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "application/yaml"
            };

            var localVarContentType = Com.Sajari.Sdk.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Com.Sajari.Sdk.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("collection_id", Com.Sajari.Sdk.Client.ClientUtils.ParameterToString(collectionId)); // path parameter
            localVarRequestOptions.PathParameters.Add("type", Com.Sajari.Sdk.Client.ClientUtils.ParameterToString(type)); // path parameter
            localVarRequestOptions.PathParameters.Add("name", Com.Sajari.Sdk.Client.ClientUtils.ParameterToString(name)); // path parameter
            if (view != null)
            {
                localVarRequestOptions.QueryParameters.Add(Com.Sajari.Sdk.Client.ClientUtils.ParameterToMultiMap("", "view", view));
            }

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Com.Sajari.Sdk.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<Pipeline>("/v4/collections/{collection_id}/pipelines/{type}/{name}:getDefaultVersion", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetDefaultVersion", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get default pipeline version Get the default version for a given pipeline.  The default version of a pipeline is used when a pipeline is referred to without specifying a version.  This allows you to change the pipeline version used for requests without having to change your code.  To retrieve the pipeline in YAML, set the request&#39;s &#x60;Accept&#x60; header to &#x60;application/yaml&#x60;.
        /// </summary>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection that owns the pipeline to get the default version of, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="type">The type of the pipeline to get the default version of.</param>
        /// <param name="name">The name of the pipeline to get the default version of, e.g. &#x60;my-pipeline&#x60;.</param>
        /// <param name="view">The amount of information to include in the retrieved pipeline.   - VIEW_UNSPECIFIED: The default / unset value. The API defaults to the &#x60;BASIC&#x60; view.  - BASIC: Include basic information including type, name, version and description but not the full step configuration. This is the default value (for both [ListPipelines](/api#operation/ListPipelines) and [GetPipeline](/api#operation/GetPipeline)).  - FULL: Include the information from &#x60;BASIC&#x60;, plus full step configuration. (optional, default to VIEW_UNSPECIFIED)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Pipeline</returns>
        public async System.Threading.Tasks.Task<Pipeline> GetDefaultVersionAsync(string collectionId, string type, string name, string view = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Com.Sajari.Sdk.Client.ApiResponse<Pipeline> localVarResponse = await GetDefaultVersionWithHttpInfoAsync(collectionId, type, name, view, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get default pipeline version Get the default version for a given pipeline.  The default version of a pipeline is used when a pipeline is referred to without specifying a version.  This allows you to change the pipeline version used for requests without having to change your code.  To retrieve the pipeline in YAML, set the request&#39;s &#x60;Accept&#x60; header to &#x60;application/yaml&#x60;.
        /// </summary>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection that owns the pipeline to get the default version of, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="type">The type of the pipeline to get the default version of.</param>
        /// <param name="name">The name of the pipeline to get the default version of, e.g. &#x60;my-pipeline&#x60;.</param>
        /// <param name="view">The amount of information to include in the retrieved pipeline.   - VIEW_UNSPECIFIED: The default / unset value. The API defaults to the &#x60;BASIC&#x60; view.  - BASIC: Include basic information including type, name, version and description but not the full step configuration. This is the default value (for both [ListPipelines](/api#operation/ListPipelines) and [GetPipeline](/api#operation/GetPipeline)).  - FULL: Include the information from &#x60;BASIC&#x60;, plus full step configuration. (optional, default to VIEW_UNSPECIFIED)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Pipeline)</returns>
        public async System.Threading.Tasks.Task<Com.Sajari.Sdk.Client.ApiResponse<Pipeline>> GetDefaultVersionWithHttpInfoAsync(string collectionId, string type, string name, string view = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'collectionId' is set
            if (collectionId == null)
                throw new Com.Sajari.Sdk.Client.ApiException(400, "Missing required parameter 'collectionId' when calling PipelinesApi->GetDefaultVersion");

            // verify the required parameter 'type' is set
            if (type == null)
                throw new Com.Sajari.Sdk.Client.ApiException(400, "Missing required parameter 'type' when calling PipelinesApi->GetDefaultVersion");

            // verify the required parameter 'name' is set
            if (name == null)
                throw new Com.Sajari.Sdk.Client.ApiException(400, "Missing required parameter 'name' when calling PipelinesApi->GetDefaultVersion");


            Com.Sajari.Sdk.Client.RequestOptions localVarRequestOptions = new Com.Sajari.Sdk.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "application/yaml"
            };


            var localVarContentType = Com.Sajari.Sdk.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Com.Sajari.Sdk.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("collection_id", Com.Sajari.Sdk.Client.ClientUtils.ParameterToString(collectionId)); // path parameter
            localVarRequestOptions.PathParameters.Add("type", Com.Sajari.Sdk.Client.ClientUtils.ParameterToString(type)); // path parameter
            localVarRequestOptions.PathParameters.Add("name", Com.Sajari.Sdk.Client.ClientUtils.ParameterToString(name)); // path parameter
            if (view != null)
            {
                localVarRequestOptions.QueryParameters.Add(Com.Sajari.Sdk.Client.ClientUtils.ParameterToMultiMap("", "view", view));
            }

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Com.Sajari.Sdk.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }

            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Pipeline>("/v4/collections/{collection_id}/pipelines/{type}/{name}:getDefaultVersion", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetDefaultVersion", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get pipeline Retrieve the details of a pipeline. Supply the type, name and version.  To retrieve the pipeline in YAML, set the request&#39;s &#x60;Accept&#x60; header to &#x60;application/yaml&#x60;.
        /// </summary>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection that owns the pipeline, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="type">The type of the pipeline to retrieve.</param>
        /// <param name="name">The name of the pipeline to retrieve, e.g. &#x60;my-pipeline&#x60;.</param>
        /// <param name="version">The version of the pipeline to retrieve, e.g. &#x60;42&#x60;.</param>
        /// <param name="view">The amount of information to include in the retrieved pipeline.   - VIEW_UNSPECIFIED: The default / unset value. The API defaults to the &#x60;BASIC&#x60; view.  - BASIC: Include basic information including type, name, version and description but not the full step configuration. This is the default value (for both [ListPipelines](/api#operation/ListPipelines) and [GetPipeline](/api#operation/GetPipeline)).  - FULL: Include the information from &#x60;BASIC&#x60;, plus full step configuration. (optional, default to VIEW_UNSPECIFIED)</param>
        /// <returns>Pipeline</returns>
        public Pipeline GetPipeline(string collectionId, string type, string name, string version, string view = default(string))
        {
            Com.Sajari.Sdk.Client.ApiResponse<Pipeline> localVarResponse = GetPipelineWithHttpInfo(collectionId, type, name, version, view);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get pipeline Retrieve the details of a pipeline. Supply the type, name and version.  To retrieve the pipeline in YAML, set the request&#39;s &#x60;Accept&#x60; header to &#x60;application/yaml&#x60;.
        /// </summary>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection that owns the pipeline, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="type">The type of the pipeline to retrieve.</param>
        /// <param name="name">The name of the pipeline to retrieve, e.g. &#x60;my-pipeline&#x60;.</param>
        /// <param name="version">The version of the pipeline to retrieve, e.g. &#x60;42&#x60;.</param>
        /// <param name="view">The amount of information to include in the retrieved pipeline.   - VIEW_UNSPECIFIED: The default / unset value. The API defaults to the &#x60;BASIC&#x60; view.  - BASIC: Include basic information including type, name, version and description but not the full step configuration. This is the default value (for both [ListPipelines](/api#operation/ListPipelines) and [GetPipeline](/api#operation/GetPipeline)).  - FULL: Include the information from &#x60;BASIC&#x60;, plus full step configuration. (optional, default to VIEW_UNSPECIFIED)</param>
        /// <returns>ApiResponse of Pipeline</returns>
        public Com.Sajari.Sdk.Client.ApiResponse<Pipeline> GetPipelineWithHttpInfo(string collectionId, string type, string name, string version, string view = default(string))
        {
            // verify the required parameter 'collectionId' is set
            if (collectionId == null)
                throw new Com.Sajari.Sdk.Client.ApiException(400, "Missing required parameter 'collectionId' when calling PipelinesApi->GetPipeline");

            // verify the required parameter 'type' is set
            if (type == null)
                throw new Com.Sajari.Sdk.Client.ApiException(400, "Missing required parameter 'type' when calling PipelinesApi->GetPipeline");

            // verify the required parameter 'name' is set
            if (name == null)
                throw new Com.Sajari.Sdk.Client.ApiException(400, "Missing required parameter 'name' when calling PipelinesApi->GetPipeline");

            // verify the required parameter 'version' is set
            if (version == null)
                throw new Com.Sajari.Sdk.Client.ApiException(400, "Missing required parameter 'version' when calling PipelinesApi->GetPipeline");

            Com.Sajari.Sdk.Client.RequestOptions localVarRequestOptions = new Com.Sajari.Sdk.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "application/yaml"
            };

            var localVarContentType = Com.Sajari.Sdk.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Com.Sajari.Sdk.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("collection_id", Com.Sajari.Sdk.Client.ClientUtils.ParameterToString(collectionId)); // path parameter
            localVarRequestOptions.PathParameters.Add("type", Com.Sajari.Sdk.Client.ClientUtils.ParameterToString(type)); // path parameter
            localVarRequestOptions.PathParameters.Add("name", Com.Sajari.Sdk.Client.ClientUtils.ParameterToString(name)); // path parameter
            localVarRequestOptions.PathParameters.Add("version", Com.Sajari.Sdk.Client.ClientUtils.ParameterToString(version)); // path parameter
            if (view != null)
            {
                localVarRequestOptions.QueryParameters.Add(Com.Sajari.Sdk.Client.ClientUtils.ParameterToMultiMap("", "view", view));
            }

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Com.Sajari.Sdk.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<Pipeline>("/v4/collections/{collection_id}/pipelines/{type}/{name}/{version}", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetPipeline", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get pipeline Retrieve the details of a pipeline. Supply the type, name and version.  To retrieve the pipeline in YAML, set the request&#39;s &#x60;Accept&#x60; header to &#x60;application/yaml&#x60;.
        /// </summary>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection that owns the pipeline, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="type">The type of the pipeline to retrieve.</param>
        /// <param name="name">The name of the pipeline to retrieve, e.g. &#x60;my-pipeline&#x60;.</param>
        /// <param name="version">The version of the pipeline to retrieve, e.g. &#x60;42&#x60;.</param>
        /// <param name="view">The amount of information to include in the retrieved pipeline.   - VIEW_UNSPECIFIED: The default / unset value. The API defaults to the &#x60;BASIC&#x60; view.  - BASIC: Include basic information including type, name, version and description but not the full step configuration. This is the default value (for both [ListPipelines](/api#operation/ListPipelines) and [GetPipeline](/api#operation/GetPipeline)).  - FULL: Include the information from &#x60;BASIC&#x60;, plus full step configuration. (optional, default to VIEW_UNSPECIFIED)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Pipeline</returns>
        public async System.Threading.Tasks.Task<Pipeline> GetPipelineAsync(string collectionId, string type, string name, string version, string view = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Com.Sajari.Sdk.Client.ApiResponse<Pipeline> localVarResponse = await GetPipelineWithHttpInfoAsync(collectionId, type, name, version, view, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get pipeline Retrieve the details of a pipeline. Supply the type, name and version.  To retrieve the pipeline in YAML, set the request&#39;s &#x60;Accept&#x60; header to &#x60;application/yaml&#x60;.
        /// </summary>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection that owns the pipeline, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="type">The type of the pipeline to retrieve.</param>
        /// <param name="name">The name of the pipeline to retrieve, e.g. &#x60;my-pipeline&#x60;.</param>
        /// <param name="version">The version of the pipeline to retrieve, e.g. &#x60;42&#x60;.</param>
        /// <param name="view">The amount of information to include in the retrieved pipeline.   - VIEW_UNSPECIFIED: The default / unset value. The API defaults to the &#x60;BASIC&#x60; view.  - BASIC: Include basic information including type, name, version and description but not the full step configuration. This is the default value (for both [ListPipelines](/api#operation/ListPipelines) and [GetPipeline](/api#operation/GetPipeline)).  - FULL: Include the information from &#x60;BASIC&#x60;, plus full step configuration. (optional, default to VIEW_UNSPECIFIED)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Pipeline)</returns>
        public async System.Threading.Tasks.Task<Com.Sajari.Sdk.Client.ApiResponse<Pipeline>> GetPipelineWithHttpInfoAsync(string collectionId, string type, string name, string version, string view = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'collectionId' is set
            if (collectionId == null)
                throw new Com.Sajari.Sdk.Client.ApiException(400, "Missing required parameter 'collectionId' when calling PipelinesApi->GetPipeline");

            // verify the required parameter 'type' is set
            if (type == null)
                throw new Com.Sajari.Sdk.Client.ApiException(400, "Missing required parameter 'type' when calling PipelinesApi->GetPipeline");

            // verify the required parameter 'name' is set
            if (name == null)
                throw new Com.Sajari.Sdk.Client.ApiException(400, "Missing required parameter 'name' when calling PipelinesApi->GetPipeline");

            // verify the required parameter 'version' is set
            if (version == null)
                throw new Com.Sajari.Sdk.Client.ApiException(400, "Missing required parameter 'version' when calling PipelinesApi->GetPipeline");


            Com.Sajari.Sdk.Client.RequestOptions localVarRequestOptions = new Com.Sajari.Sdk.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json",
                "application/yaml"
            };


            var localVarContentType = Com.Sajari.Sdk.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Com.Sajari.Sdk.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("collection_id", Com.Sajari.Sdk.Client.ClientUtils.ParameterToString(collectionId)); // path parameter
            localVarRequestOptions.PathParameters.Add("type", Com.Sajari.Sdk.Client.ClientUtils.ParameterToString(type)); // path parameter
            localVarRequestOptions.PathParameters.Add("name", Com.Sajari.Sdk.Client.ClientUtils.ParameterToString(name)); // path parameter
            localVarRequestOptions.PathParameters.Add("version", Com.Sajari.Sdk.Client.ClientUtils.ParameterToString(version)); // path parameter
            if (view != null)
            {
                localVarRequestOptions.QueryParameters.Add(Com.Sajari.Sdk.Client.ClientUtils.ParameterToMultiMap("", "view", view));
            }

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Com.Sajari.Sdk.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }

            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<Pipeline>("/v4/collections/{collection_id}/pipelines/{type}/{name}/{version}", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetPipeline", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// List pipelines Retrieve a list of pipelines in a collection.
        /// </summary>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection that owns this set of pipelines, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="pageSize">The maximum number of pipelines to return. The service may return fewer than this value.  If unspecified, at most 50 pipelines are returned.  The maximum value is 1000; values above 1000 are coerced to 1000. (optional)</param>
        /// <param name="pageToken">A page token, received from a previous [ListPipelines](/api#operation/ListPipelines) call.  Provide this to retrieve the subsequent page.  When paginating, all other parameters provided to [ListPipelines](/api#operation/ListPipelines) must match the call that provided the page token. (optional)</param>
        /// <param name="view">The amount of information to include in each retrieved pipeline.   - VIEW_UNSPECIFIED: The default / unset value. The API defaults to the &#x60;BASIC&#x60; view.  - BASIC: Include basic information including type, name, version and description but not the full step configuration. This is the default value (for both [ListPipelines](/api#operation/ListPipelines) and [GetPipeline](/api#operation/GetPipeline)).  - FULL: Include the information from &#x60;BASIC&#x60;, plus full step configuration. (optional, default to VIEW_UNSPECIFIED)</param>
        /// <returns>ListPipelinesResponse</returns>
        public ListPipelinesResponse ListPipelines(string collectionId, int? pageSize = default(int?), string pageToken = default(string), string view = default(string))
        {
            Com.Sajari.Sdk.Client.ApiResponse<ListPipelinesResponse> localVarResponse = ListPipelinesWithHttpInfo(collectionId, pageSize, pageToken, view);
            return localVarResponse.Data;
        }

        /// <summary>
        /// List pipelines Retrieve a list of pipelines in a collection.
        /// </summary>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection that owns this set of pipelines, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="pageSize">The maximum number of pipelines to return. The service may return fewer than this value.  If unspecified, at most 50 pipelines are returned.  The maximum value is 1000; values above 1000 are coerced to 1000. (optional)</param>
        /// <param name="pageToken">A page token, received from a previous [ListPipelines](/api#operation/ListPipelines) call.  Provide this to retrieve the subsequent page.  When paginating, all other parameters provided to [ListPipelines](/api#operation/ListPipelines) must match the call that provided the page token. (optional)</param>
        /// <param name="view">The amount of information to include in each retrieved pipeline.   - VIEW_UNSPECIFIED: The default / unset value. The API defaults to the &#x60;BASIC&#x60; view.  - BASIC: Include basic information including type, name, version and description but not the full step configuration. This is the default value (for both [ListPipelines](/api#operation/ListPipelines) and [GetPipeline](/api#operation/GetPipeline)).  - FULL: Include the information from &#x60;BASIC&#x60;, plus full step configuration. (optional, default to VIEW_UNSPECIFIED)</param>
        /// <returns>ApiResponse of ListPipelinesResponse</returns>
        public Com.Sajari.Sdk.Client.ApiResponse<ListPipelinesResponse> ListPipelinesWithHttpInfo(string collectionId, int? pageSize = default(int?), string pageToken = default(string), string view = default(string))
        {
            // verify the required parameter 'collectionId' is set
            if (collectionId == null)
                throw new Com.Sajari.Sdk.Client.ApiException(400, "Missing required parameter 'collectionId' when calling PipelinesApi->ListPipelines");

            Com.Sajari.Sdk.Client.RequestOptions localVarRequestOptions = new Com.Sajari.Sdk.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Com.Sajari.Sdk.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Com.Sajari.Sdk.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("collection_id", Com.Sajari.Sdk.Client.ClientUtils.ParameterToString(collectionId)); // path parameter
            if (pageSize != null)
            {
                localVarRequestOptions.QueryParameters.Add(Com.Sajari.Sdk.Client.ClientUtils.ParameterToMultiMap("", "page_size", pageSize));
            }
            if (pageToken != null)
            {
                localVarRequestOptions.QueryParameters.Add(Com.Sajari.Sdk.Client.ClientUtils.ParameterToMultiMap("", "page_token", pageToken));
            }
            if (view != null)
            {
                localVarRequestOptions.QueryParameters.Add(Com.Sajari.Sdk.Client.ClientUtils.ParameterToMultiMap("", "view", view));
            }

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Com.Sajari.Sdk.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<ListPipelinesResponse>("/v4/collections/{collection_id}/pipelines", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ListPipelines", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// List pipelines Retrieve a list of pipelines in a collection.
        /// </summary>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection that owns this set of pipelines, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="pageSize">The maximum number of pipelines to return. The service may return fewer than this value.  If unspecified, at most 50 pipelines are returned.  The maximum value is 1000; values above 1000 are coerced to 1000. (optional)</param>
        /// <param name="pageToken">A page token, received from a previous [ListPipelines](/api#operation/ListPipelines) call.  Provide this to retrieve the subsequent page.  When paginating, all other parameters provided to [ListPipelines](/api#operation/ListPipelines) must match the call that provided the page token. (optional)</param>
        /// <param name="view">The amount of information to include in each retrieved pipeline.   - VIEW_UNSPECIFIED: The default / unset value. The API defaults to the &#x60;BASIC&#x60; view.  - BASIC: Include basic information including type, name, version and description but not the full step configuration. This is the default value (for both [ListPipelines](/api#operation/ListPipelines) and [GetPipeline](/api#operation/GetPipeline)).  - FULL: Include the information from &#x60;BASIC&#x60;, plus full step configuration. (optional, default to VIEW_UNSPECIFIED)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ListPipelinesResponse</returns>
        public async System.Threading.Tasks.Task<ListPipelinesResponse> ListPipelinesAsync(string collectionId, int? pageSize = default(int?), string pageToken = default(string), string view = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Com.Sajari.Sdk.Client.ApiResponse<ListPipelinesResponse> localVarResponse = await ListPipelinesWithHttpInfoAsync(collectionId, pageSize, pageToken, view, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// List pipelines Retrieve a list of pipelines in a collection.
        /// </summary>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection that owns this set of pipelines, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="pageSize">The maximum number of pipelines to return. The service may return fewer than this value.  If unspecified, at most 50 pipelines are returned.  The maximum value is 1000; values above 1000 are coerced to 1000. (optional)</param>
        /// <param name="pageToken">A page token, received from a previous [ListPipelines](/api#operation/ListPipelines) call.  Provide this to retrieve the subsequent page.  When paginating, all other parameters provided to [ListPipelines](/api#operation/ListPipelines) must match the call that provided the page token. (optional)</param>
        /// <param name="view">The amount of information to include in each retrieved pipeline.   - VIEW_UNSPECIFIED: The default / unset value. The API defaults to the &#x60;BASIC&#x60; view.  - BASIC: Include basic information including type, name, version and description but not the full step configuration. This is the default value (for both [ListPipelines](/api#operation/ListPipelines) and [GetPipeline](/api#operation/GetPipeline)).  - FULL: Include the information from &#x60;BASIC&#x60;, plus full step configuration. (optional, default to VIEW_UNSPECIFIED)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ListPipelinesResponse)</returns>
        public async System.Threading.Tasks.Task<Com.Sajari.Sdk.Client.ApiResponse<ListPipelinesResponse>> ListPipelinesWithHttpInfoAsync(string collectionId, int? pageSize = default(int?), string pageToken = default(string), string view = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'collectionId' is set
            if (collectionId == null)
                throw new Com.Sajari.Sdk.Client.ApiException(400, "Missing required parameter 'collectionId' when calling PipelinesApi->ListPipelines");


            Com.Sajari.Sdk.Client.RequestOptions localVarRequestOptions = new Com.Sajari.Sdk.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };


            var localVarContentType = Com.Sajari.Sdk.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Com.Sajari.Sdk.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("collection_id", Com.Sajari.Sdk.Client.ClientUtils.ParameterToString(collectionId)); // path parameter
            if (pageSize != null)
            {
                localVarRequestOptions.QueryParameters.Add(Com.Sajari.Sdk.Client.ClientUtils.ParameterToMultiMap("", "page_size", pageSize));
            }
            if (pageToken != null)
            {
                localVarRequestOptions.QueryParameters.Add(Com.Sajari.Sdk.Client.ClientUtils.ParameterToMultiMap("", "page_token", pageToken));
            }
            if (view != null)
            {
                localVarRequestOptions.QueryParameters.Add(Com.Sajari.Sdk.Client.ClientUtils.ParameterToMultiMap("", "view", view));
            }

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Com.Sajari.Sdk.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }

            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<ListPipelinesResponse>("/v4/collections/{collection_id}/pipelines", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ListPipelines", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// Set default pipeline Set the default pipeline for a collection.  Every collection has a default record pipeline and a default query pipeline.  When a pipeline is required to complete an operation, it can be omitted from the request if a default pipeline has been set. When adding a record to a collection, the default record pipeline is used if none is provided. When querying a collection, the default query pipeline is used if none is provided.  Once a default pipeline has been set it cannot be cleared, only set to another pipeline.
        /// </summary>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection to set the default query pipeline of, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="setDefaultPipelineRequest"></param>
        /// <returns>Object</returns>
        public Object SetDefaultPipeline(string collectionId, SetDefaultPipelineRequest setDefaultPipelineRequest)
        {
            Com.Sajari.Sdk.Client.ApiResponse<Object> localVarResponse = SetDefaultPipelineWithHttpInfo(collectionId, setDefaultPipelineRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Set default pipeline Set the default pipeline for a collection.  Every collection has a default record pipeline and a default query pipeline.  When a pipeline is required to complete an operation, it can be omitted from the request if a default pipeline has been set. When adding a record to a collection, the default record pipeline is used if none is provided. When querying a collection, the default query pipeline is used if none is provided.  Once a default pipeline has been set it cannot be cleared, only set to another pipeline.
        /// </summary>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection to set the default query pipeline of, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="setDefaultPipelineRequest"></param>
        /// <returns>ApiResponse of Object</returns>
        public Com.Sajari.Sdk.Client.ApiResponse<Object> SetDefaultPipelineWithHttpInfo(string collectionId, SetDefaultPipelineRequest setDefaultPipelineRequest)
        {
            // verify the required parameter 'collectionId' is set
            if (collectionId == null)
                throw new Com.Sajari.Sdk.Client.ApiException(400, "Missing required parameter 'collectionId' when calling PipelinesApi->SetDefaultPipeline");

            // verify the required parameter 'setDefaultPipelineRequest' is set
            if (setDefaultPipelineRequest == null)
                throw new Com.Sajari.Sdk.Client.ApiException(400, "Missing required parameter 'setDefaultPipelineRequest' when calling PipelinesApi->SetDefaultPipeline");

            Com.Sajari.Sdk.Client.RequestOptions localVarRequestOptions = new Com.Sajari.Sdk.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Com.Sajari.Sdk.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Com.Sajari.Sdk.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("collection_id", Com.Sajari.Sdk.Client.ClientUtils.ParameterToString(collectionId)); // path parameter
            localVarRequestOptions.Data = setDefaultPipelineRequest;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Com.Sajari.Sdk.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<Object>("/v4/collections/{collection_id}:setDefaultPipeline", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("SetDefaultPipeline", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// Set default pipeline Set the default pipeline for a collection.  Every collection has a default record pipeline and a default query pipeline.  When a pipeline is required to complete an operation, it can be omitted from the request if a default pipeline has been set. When adding a record to a collection, the default record pipeline is used if none is provided. When querying a collection, the default query pipeline is used if none is provided.  Once a default pipeline has been set it cannot be cleared, only set to another pipeline.
        /// </summary>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection to set the default query pipeline of, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="setDefaultPipelineRequest"></param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Object> SetDefaultPipelineAsync(string collectionId, SetDefaultPipelineRequest setDefaultPipelineRequest, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Com.Sajari.Sdk.Client.ApiResponse<Object> localVarResponse = await SetDefaultPipelineWithHttpInfoAsync(collectionId, setDefaultPipelineRequest, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Set default pipeline Set the default pipeline for a collection.  Every collection has a default record pipeline and a default query pipeline.  When a pipeline is required to complete an operation, it can be omitted from the request if a default pipeline has been set. When adding a record to a collection, the default record pipeline is used if none is provided. When querying a collection, the default query pipeline is used if none is provided.  Once a default pipeline has been set it cannot be cleared, only set to another pipeline.
        /// </summary>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection to set the default query pipeline of, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="setDefaultPipelineRequest"></param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<Com.Sajari.Sdk.Client.ApiResponse<Object>> SetDefaultPipelineWithHttpInfoAsync(string collectionId, SetDefaultPipelineRequest setDefaultPipelineRequest, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'collectionId' is set
            if (collectionId == null)
                throw new Com.Sajari.Sdk.Client.ApiException(400, "Missing required parameter 'collectionId' when calling PipelinesApi->SetDefaultPipeline");

            // verify the required parameter 'setDefaultPipelineRequest' is set
            if (setDefaultPipelineRequest == null)
                throw new Com.Sajari.Sdk.Client.ApiException(400, "Missing required parameter 'setDefaultPipelineRequest' when calling PipelinesApi->SetDefaultPipeline");


            Com.Sajari.Sdk.Client.RequestOptions localVarRequestOptions = new Com.Sajari.Sdk.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };


            var localVarContentType = Com.Sajari.Sdk.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Com.Sajari.Sdk.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("collection_id", Com.Sajari.Sdk.Client.ClientUtils.ParameterToString(collectionId)); // path parameter
            localVarRequestOptions.Data = setDefaultPipelineRequest;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Com.Sajari.Sdk.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }

            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Object>("/v4/collections/{collection_id}:setDefaultPipeline", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("SetDefaultPipeline", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// Set default pipeline version Set the default version for a given pipeline.  The default version of a pipeline is used when a pipeline is referred to without specifying a version.  This allows you to change the pipeline version used for requests without having to change your code.
        /// </summary>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection that owns the pipeline to set the default version of, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="type">The type of the pipeline to set the default version of.</param>
        /// <param name="name">The name of the pipeline to set the default version of, e.g. &#x60;my-pipeline&#x60;.</param>
        /// <param name="setDefaultVersionRequest"></param>
        /// <returns>Object</returns>
        public Object SetDefaultVersion(string collectionId, string type, string name, SetDefaultVersionRequest setDefaultVersionRequest)
        {
            Com.Sajari.Sdk.Client.ApiResponse<Object> localVarResponse = SetDefaultVersionWithHttpInfo(collectionId, type, name, setDefaultVersionRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Set default pipeline version Set the default version for a given pipeline.  The default version of a pipeline is used when a pipeline is referred to without specifying a version.  This allows you to change the pipeline version used for requests without having to change your code.
        /// </summary>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection that owns the pipeline to set the default version of, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="type">The type of the pipeline to set the default version of.</param>
        /// <param name="name">The name of the pipeline to set the default version of, e.g. &#x60;my-pipeline&#x60;.</param>
        /// <param name="setDefaultVersionRequest"></param>
        /// <returns>ApiResponse of Object</returns>
        public Com.Sajari.Sdk.Client.ApiResponse<Object> SetDefaultVersionWithHttpInfo(string collectionId, string type, string name, SetDefaultVersionRequest setDefaultVersionRequest)
        {
            // verify the required parameter 'collectionId' is set
            if (collectionId == null)
                throw new Com.Sajari.Sdk.Client.ApiException(400, "Missing required parameter 'collectionId' when calling PipelinesApi->SetDefaultVersion");

            // verify the required parameter 'type' is set
            if (type == null)
                throw new Com.Sajari.Sdk.Client.ApiException(400, "Missing required parameter 'type' when calling PipelinesApi->SetDefaultVersion");

            // verify the required parameter 'name' is set
            if (name == null)
                throw new Com.Sajari.Sdk.Client.ApiException(400, "Missing required parameter 'name' when calling PipelinesApi->SetDefaultVersion");

            // verify the required parameter 'setDefaultVersionRequest' is set
            if (setDefaultVersionRequest == null)
                throw new Com.Sajari.Sdk.Client.ApiException(400, "Missing required parameter 'setDefaultVersionRequest' when calling PipelinesApi->SetDefaultVersion");

            Com.Sajari.Sdk.Client.RequestOptions localVarRequestOptions = new Com.Sajari.Sdk.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Com.Sajari.Sdk.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Com.Sajari.Sdk.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("collection_id", Com.Sajari.Sdk.Client.ClientUtils.ParameterToString(collectionId)); // path parameter
            localVarRequestOptions.PathParameters.Add("type", Com.Sajari.Sdk.Client.ClientUtils.ParameterToString(type)); // path parameter
            localVarRequestOptions.PathParameters.Add("name", Com.Sajari.Sdk.Client.ClientUtils.ParameterToString(name)); // path parameter
            localVarRequestOptions.Data = setDefaultVersionRequest;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Com.Sajari.Sdk.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<Object>("/v4/collections/{collection_id}/pipelines/{type}/{name}:setDefaultVersion", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("SetDefaultVersion", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// Set default pipeline version Set the default version for a given pipeline.  The default version of a pipeline is used when a pipeline is referred to without specifying a version.  This allows you to change the pipeline version used for requests without having to change your code.
        /// </summary>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection that owns the pipeline to set the default version of, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="type">The type of the pipeline to set the default version of.</param>
        /// <param name="name">The name of the pipeline to set the default version of, e.g. &#x60;my-pipeline&#x60;.</param>
        /// <param name="setDefaultVersionRequest"></param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Object> SetDefaultVersionAsync(string collectionId, string type, string name, SetDefaultVersionRequest setDefaultVersionRequest, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Com.Sajari.Sdk.Client.ApiResponse<Object> localVarResponse = await SetDefaultVersionWithHttpInfoAsync(collectionId, type, name, setDefaultVersionRequest, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Set default pipeline version Set the default version for a given pipeline.  The default version of a pipeline is used when a pipeline is referred to without specifying a version.  This allows you to change the pipeline version used for requests without having to change your code.
        /// </summary>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection that owns the pipeline to set the default version of, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="type">The type of the pipeline to set the default version of.</param>
        /// <param name="name">The name of the pipeline to set the default version of, e.g. &#x60;my-pipeline&#x60;.</param>
        /// <param name="setDefaultVersionRequest"></param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<Com.Sajari.Sdk.Client.ApiResponse<Object>> SetDefaultVersionWithHttpInfoAsync(string collectionId, string type, string name, SetDefaultVersionRequest setDefaultVersionRequest, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'collectionId' is set
            if (collectionId == null)
                throw new Com.Sajari.Sdk.Client.ApiException(400, "Missing required parameter 'collectionId' when calling PipelinesApi->SetDefaultVersion");

            // verify the required parameter 'type' is set
            if (type == null)
                throw new Com.Sajari.Sdk.Client.ApiException(400, "Missing required parameter 'type' when calling PipelinesApi->SetDefaultVersion");

            // verify the required parameter 'name' is set
            if (name == null)
                throw new Com.Sajari.Sdk.Client.ApiException(400, "Missing required parameter 'name' when calling PipelinesApi->SetDefaultVersion");

            // verify the required parameter 'setDefaultVersionRequest' is set
            if (setDefaultVersionRequest == null)
                throw new Com.Sajari.Sdk.Client.ApiException(400, "Missing required parameter 'setDefaultVersionRequest' when calling PipelinesApi->SetDefaultVersion");


            Com.Sajari.Sdk.Client.RequestOptions localVarRequestOptions = new Com.Sajari.Sdk.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };


            var localVarContentType = Com.Sajari.Sdk.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Com.Sajari.Sdk.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("collection_id", Com.Sajari.Sdk.Client.ClientUtils.ParameterToString(collectionId)); // path parameter
            localVarRequestOptions.PathParameters.Add("type", Com.Sajari.Sdk.Client.ClientUtils.ParameterToString(type)); // path parameter
            localVarRequestOptions.PathParameters.Add("name", Com.Sajari.Sdk.Client.ClientUtils.ParameterToString(name)); // path parameter
            localVarRequestOptions.Data = setDefaultVersionRequest;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Com.Sajari.Sdk.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }

            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<Object>("/v4/collections/{collection_id}/pipelines/{type}/{name}:setDefaultVersion", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("SetDefaultVersion", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

    }
}
