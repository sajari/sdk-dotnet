/*
 * Search.io API
 *
 * Search.io offers a search and discovery service with NeuralsearchÂ®, the world's first instant AI search technology. Businesses of all sizes use Search.io to build site search and discovery solutions that maximize e-commerce revenue, optimize on-site customer experience, and scale their online presence.
 *
 * The version of the OpenAPI document: v4
 * Contact: support@search.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using Com.Sajari.Sdk.Client;
using Com.Sajari.Sdk.Model;

namespace Com.Sajari.Sdk.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IPromotionsApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// Create promotion
        /// </summary>
        /// <remarks>
        /// Create a new promotion in a collection.
        /// </remarks>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection to create a promotion in, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="promotion">The promotion to create.</param>
        /// <returns>Promotion</returns>
        Promotion CreatePromotion(string collectionId, Promotion promotion);

        /// <summary>
        /// Create promotion
        /// </summary>
        /// <remarks>
        /// Create a new promotion in a collection.
        /// </remarks>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection to create a promotion in, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="promotion">The promotion to create.</param>
        /// <returns>ApiResponse of Promotion</returns>
        ApiResponse<Promotion> CreatePromotionWithHttpInfo(string collectionId, Promotion promotion);
        /// <summary>
        /// Delete promotion
        /// </summary>
        /// <remarks>
        /// Delete a promotion and all of its associated data.  &gt; Note: This operation cannot be reversed.
        /// </remarks>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection the promotion belongs to, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="promotionId">The promotion to delete, e.g. &#x60;1234&#x60;.</param>
        /// <returns>Object</returns>
        Object DeletePromotion(string collectionId, string promotionId);

        /// <summary>
        /// Delete promotion
        /// </summary>
        /// <remarks>
        /// Delete a promotion and all of its associated data.  &gt; Note: This operation cannot be reversed.
        /// </remarks>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection the promotion belongs to, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="promotionId">The promotion to delete, e.g. &#x60;1234&#x60;.</param>
        /// <returns>ApiResponse of Object</returns>
        ApiResponse<Object> DeletePromotionWithHttpInfo(string collectionId, string promotionId);
        /// <summary>
        /// Get promotion
        /// </summary>
        /// <remarks>
        /// Retrieve the details of a promotion.
        /// </remarks>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection that owns the promotion, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="promotionId">The promotion to retrieve, e.g. &#x60;1234&#x60;.</param>
        /// <returns>Promotion</returns>
        Promotion GetPromotion(string collectionId, string promotionId);

        /// <summary>
        /// Get promotion
        /// </summary>
        /// <remarks>
        /// Retrieve the details of a promotion.
        /// </remarks>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection that owns the promotion, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="promotionId">The promotion to retrieve, e.g. &#x60;1234&#x60;.</param>
        /// <returns>ApiResponse of Promotion</returns>
        ApiResponse<Promotion> GetPromotionWithHttpInfo(string collectionId, string promotionId);
        /// <summary>
        /// List promotions
        /// </summary>
        /// <remarks>
        /// Retrieve a list of promotions in a collection.  Promotion pins, exclusions and filter boosts are not returned in this call.
        /// </remarks>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection that owns this set of promotions, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="pageSize">The maximum number of promotions to return. The service may return fewer than this value.  If unspecified, at most 50 promotions are returned.  The maximum value is 1000; values above 1000 are coerced to 1000. (optional)</param>
        /// <param name="pageToken">A page token, received from a previous [ListPromotions](/api#operation/ListPromotions) call.  Provide this to retrieve the subsequent page.  When paginating, all other parameters provided to [ListPromotions](/api#operation/ListPromotions) must match the call that provided the page token. (optional)</param>
        /// <returns>ListPromotionsResponse</returns>
        ListPromotionsResponse ListPromotions(string collectionId, int? pageSize = default(int?), string pageToken = default(string));

        /// <summary>
        /// List promotions
        /// </summary>
        /// <remarks>
        /// Retrieve a list of promotions in a collection.  Promotion pins, exclusions and filter boosts are not returned in this call.
        /// </remarks>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection that owns this set of promotions, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="pageSize">The maximum number of promotions to return. The service may return fewer than this value.  If unspecified, at most 50 promotions are returned.  The maximum value is 1000; values above 1000 are coerced to 1000. (optional)</param>
        /// <param name="pageToken">A page token, received from a previous [ListPromotions](/api#operation/ListPromotions) call.  Provide this to retrieve the subsequent page.  When paginating, all other parameters provided to [ListPromotions](/api#operation/ListPromotions) must match the call that provided the page token. (optional)</param>
        /// <returns>ApiResponse of ListPromotionsResponse</returns>
        ApiResponse<ListPromotionsResponse> ListPromotionsWithHttpInfo(string collectionId, int? pageSize = default(int?), string pageToken = default(string));
        /// <summary>
        /// Update promotion
        /// </summary>
        /// <remarks>
        /// Update the details of a promotion.  Pass each field that you want to update in the request body. Also specify the name of each field that you want to update in the &#x60;update_mask&#x60; in the request URL query string. Separate multiple fields with a comma. Fields included in the request body, but not included in the field mask are not updated.  For example, to update the &#x60;display_name&#x60; and &#x60;start_time&#x60; fields, make a &#x60;PATCH&#x60; request to the URL:  &#x60;&#x60;&#x60; /v4/collections/{collection_id}/promotions/{promotion_id}?update_mask&#x3D;display_name,start_time &#x60;&#x60;&#x60;  With the JSON body:  &#x60;&#x60;&#x60; {   \&quot;display_name\&quot;: \&quot;new value\&quot;,   \&quot;start_time\&quot;: \&quot;2006-01-02T15:04:05Z07:00\&quot;,   \&quot;end_time\&quot;: \&quot;2006-01-02T15:04:05Z07:00\&quot; } &#x60;&#x60;&#x60;  &gt; Note: In this example &#x60;end_time&#x60; is not updated because it is not specified in the &#x60;update_mask&#x60;.
        /// </remarks>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection the promotion belongs to, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="promotionId">The promotion to update, e.g. &#x60;1234&#x60;.</param>
        /// <param name="updateMask">The list of fields to be updated, separated by a comma, e.g. &#x60;field1,field2&#x60;.  Each field should be in snake case, e.g. &#x60;display_name&#x60;, &#x60;filter_boosts&#x60;.  For each field that you want to update, provide a corresponding value in the promotion object containing the new value.</param>
        /// <param name="promotion">Details of the promotion to update.</param>
        /// <returns>Promotion</returns>
        Promotion UpdatePromotion(string collectionId, string promotionId, string updateMask, Promotion promotion);

        /// <summary>
        /// Update promotion
        /// </summary>
        /// <remarks>
        /// Update the details of a promotion.  Pass each field that you want to update in the request body. Also specify the name of each field that you want to update in the &#x60;update_mask&#x60; in the request URL query string. Separate multiple fields with a comma. Fields included in the request body, but not included in the field mask are not updated.  For example, to update the &#x60;display_name&#x60; and &#x60;start_time&#x60; fields, make a &#x60;PATCH&#x60; request to the URL:  &#x60;&#x60;&#x60; /v4/collections/{collection_id}/promotions/{promotion_id}?update_mask&#x3D;display_name,start_time &#x60;&#x60;&#x60;  With the JSON body:  &#x60;&#x60;&#x60; {   \&quot;display_name\&quot;: \&quot;new value\&quot;,   \&quot;start_time\&quot;: \&quot;2006-01-02T15:04:05Z07:00\&quot;,   \&quot;end_time\&quot;: \&quot;2006-01-02T15:04:05Z07:00\&quot; } &#x60;&#x60;&#x60;  &gt; Note: In this example &#x60;end_time&#x60; is not updated because it is not specified in the &#x60;update_mask&#x60;.
        /// </remarks>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection the promotion belongs to, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="promotionId">The promotion to update, e.g. &#x60;1234&#x60;.</param>
        /// <param name="updateMask">The list of fields to be updated, separated by a comma, e.g. &#x60;field1,field2&#x60;.  Each field should be in snake case, e.g. &#x60;display_name&#x60;, &#x60;filter_boosts&#x60;.  For each field that you want to update, provide a corresponding value in the promotion object containing the new value.</param>
        /// <param name="promotion">Details of the promotion to update.</param>
        /// <returns>ApiResponse of Promotion</returns>
        ApiResponse<Promotion> UpdatePromotionWithHttpInfo(string collectionId, string promotionId, string updateMask, Promotion promotion);
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IPromotionsApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// Create promotion
        /// </summary>
        /// <remarks>
        /// Create a new promotion in a collection.
        /// </remarks>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection to create a promotion in, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="promotion">The promotion to create.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Promotion</returns>
        System.Threading.Tasks.Task<Promotion> CreatePromotionAsync(string collectionId, Promotion promotion, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Create promotion
        /// </summary>
        /// <remarks>
        /// Create a new promotion in a collection.
        /// </remarks>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection to create a promotion in, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="promotion">The promotion to create.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Promotion)</returns>
        System.Threading.Tasks.Task<ApiResponse<Promotion>> CreatePromotionWithHttpInfoAsync(string collectionId, Promotion promotion, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Delete promotion
        /// </summary>
        /// <remarks>
        /// Delete a promotion and all of its associated data.  &gt; Note: This operation cannot be reversed.
        /// </remarks>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection the promotion belongs to, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="promotionId">The promotion to delete, e.g. &#x60;1234&#x60;.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Object</returns>
        System.Threading.Tasks.Task<Object> DeletePromotionAsync(string collectionId, string promotionId, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Delete promotion
        /// </summary>
        /// <remarks>
        /// Delete a promotion and all of its associated data.  &gt; Note: This operation cannot be reversed.
        /// </remarks>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection the promotion belongs to, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="promotionId">The promotion to delete, e.g. &#x60;1234&#x60;.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> DeletePromotionWithHttpInfoAsync(string collectionId, string promotionId, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Get promotion
        /// </summary>
        /// <remarks>
        /// Retrieve the details of a promotion.
        /// </remarks>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection that owns the promotion, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="promotionId">The promotion to retrieve, e.g. &#x60;1234&#x60;.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Promotion</returns>
        System.Threading.Tasks.Task<Promotion> GetPromotionAsync(string collectionId, string promotionId, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Get promotion
        /// </summary>
        /// <remarks>
        /// Retrieve the details of a promotion.
        /// </remarks>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection that owns the promotion, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="promotionId">The promotion to retrieve, e.g. &#x60;1234&#x60;.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Promotion)</returns>
        System.Threading.Tasks.Task<ApiResponse<Promotion>> GetPromotionWithHttpInfoAsync(string collectionId, string promotionId, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// List promotions
        /// </summary>
        /// <remarks>
        /// Retrieve a list of promotions in a collection.  Promotion pins, exclusions and filter boosts are not returned in this call.
        /// </remarks>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection that owns this set of promotions, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="pageSize">The maximum number of promotions to return. The service may return fewer than this value.  If unspecified, at most 50 promotions are returned.  The maximum value is 1000; values above 1000 are coerced to 1000. (optional)</param>
        /// <param name="pageToken">A page token, received from a previous [ListPromotions](/api#operation/ListPromotions) call.  Provide this to retrieve the subsequent page.  When paginating, all other parameters provided to [ListPromotions](/api#operation/ListPromotions) must match the call that provided the page token. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ListPromotionsResponse</returns>
        System.Threading.Tasks.Task<ListPromotionsResponse> ListPromotionsAsync(string collectionId, int? pageSize = default(int?), string pageToken = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// List promotions
        /// </summary>
        /// <remarks>
        /// Retrieve a list of promotions in a collection.  Promotion pins, exclusions and filter boosts are not returned in this call.
        /// </remarks>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection that owns this set of promotions, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="pageSize">The maximum number of promotions to return. The service may return fewer than this value.  If unspecified, at most 50 promotions are returned.  The maximum value is 1000; values above 1000 are coerced to 1000. (optional)</param>
        /// <param name="pageToken">A page token, received from a previous [ListPromotions](/api#operation/ListPromotions) call.  Provide this to retrieve the subsequent page.  When paginating, all other parameters provided to [ListPromotions](/api#operation/ListPromotions) must match the call that provided the page token. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ListPromotionsResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<ListPromotionsResponse>> ListPromotionsWithHttpInfoAsync(string collectionId, int? pageSize = default(int?), string pageToken = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Update promotion
        /// </summary>
        /// <remarks>
        /// Update the details of a promotion.  Pass each field that you want to update in the request body. Also specify the name of each field that you want to update in the &#x60;update_mask&#x60; in the request URL query string. Separate multiple fields with a comma. Fields included in the request body, but not included in the field mask are not updated.  For example, to update the &#x60;display_name&#x60; and &#x60;start_time&#x60; fields, make a &#x60;PATCH&#x60; request to the URL:  &#x60;&#x60;&#x60; /v4/collections/{collection_id}/promotions/{promotion_id}?update_mask&#x3D;display_name,start_time &#x60;&#x60;&#x60;  With the JSON body:  &#x60;&#x60;&#x60; {   \&quot;display_name\&quot;: \&quot;new value\&quot;,   \&quot;start_time\&quot;: \&quot;2006-01-02T15:04:05Z07:00\&quot;,   \&quot;end_time\&quot;: \&quot;2006-01-02T15:04:05Z07:00\&quot; } &#x60;&#x60;&#x60;  &gt; Note: In this example &#x60;end_time&#x60; is not updated because it is not specified in the &#x60;update_mask&#x60;.
        /// </remarks>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection the promotion belongs to, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="promotionId">The promotion to update, e.g. &#x60;1234&#x60;.</param>
        /// <param name="updateMask">The list of fields to be updated, separated by a comma, e.g. &#x60;field1,field2&#x60;.  Each field should be in snake case, e.g. &#x60;display_name&#x60;, &#x60;filter_boosts&#x60;.  For each field that you want to update, provide a corresponding value in the promotion object containing the new value.</param>
        /// <param name="promotion">Details of the promotion to update.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Promotion</returns>
        System.Threading.Tasks.Task<Promotion> UpdatePromotionAsync(string collectionId, string promotionId, string updateMask, Promotion promotion, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Update promotion
        /// </summary>
        /// <remarks>
        /// Update the details of a promotion.  Pass each field that you want to update in the request body. Also specify the name of each field that you want to update in the &#x60;update_mask&#x60; in the request URL query string. Separate multiple fields with a comma. Fields included in the request body, but not included in the field mask are not updated.  For example, to update the &#x60;display_name&#x60; and &#x60;start_time&#x60; fields, make a &#x60;PATCH&#x60; request to the URL:  &#x60;&#x60;&#x60; /v4/collections/{collection_id}/promotions/{promotion_id}?update_mask&#x3D;display_name,start_time &#x60;&#x60;&#x60;  With the JSON body:  &#x60;&#x60;&#x60; {   \&quot;display_name\&quot;: \&quot;new value\&quot;,   \&quot;start_time\&quot;: \&quot;2006-01-02T15:04:05Z07:00\&quot;,   \&quot;end_time\&quot;: \&quot;2006-01-02T15:04:05Z07:00\&quot; } &#x60;&#x60;&#x60;  &gt; Note: In this example &#x60;end_time&#x60; is not updated because it is not specified in the &#x60;update_mask&#x60;.
        /// </remarks>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection the promotion belongs to, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="promotionId">The promotion to update, e.g. &#x60;1234&#x60;.</param>
        /// <param name="updateMask">The list of fields to be updated, separated by a comma, e.g. &#x60;field1,field2&#x60;.  Each field should be in snake case, e.g. &#x60;display_name&#x60;, &#x60;filter_boosts&#x60;.  For each field that you want to update, provide a corresponding value in the promotion object containing the new value.</param>
        /// <param name="promotion">Details of the promotion to update.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Promotion)</returns>
        System.Threading.Tasks.Task<ApiResponse<Promotion>> UpdatePromotionWithHttpInfoAsync(string collectionId, string promotionId, string updateMask, Promotion promotion, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IPromotionsApi : IPromotionsApiSync, IPromotionsApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class PromotionsApi : IPromotionsApi
    {
        private Com.Sajari.Sdk.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="PromotionsApi"/> class.
        /// </summary>
        /// <returns></returns>
        public PromotionsApi() : this((string)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="PromotionsApi"/> class.
        /// </summary>
        /// <returns></returns>
        public PromotionsApi(string basePath)
        {
            this.Configuration = Com.Sajari.Sdk.Client.Configuration.MergeConfigurations(
                Com.Sajari.Sdk.Client.GlobalConfiguration.Instance,
                new Com.Sajari.Sdk.Client.Configuration { BasePath = basePath }
            );
            this.Client = new Com.Sajari.Sdk.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Com.Sajari.Sdk.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = Com.Sajari.Sdk.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="PromotionsApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public PromotionsApi(Com.Sajari.Sdk.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = Com.Sajari.Sdk.Client.Configuration.MergeConfigurations(
                Com.Sajari.Sdk.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new Com.Sajari.Sdk.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Com.Sajari.Sdk.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = Com.Sajari.Sdk.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="PromotionsApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public PromotionsApi(Com.Sajari.Sdk.Client.ISynchronousClient client, Com.Sajari.Sdk.Client.IAsynchronousClient asyncClient, Com.Sajari.Sdk.Client.IReadableConfiguration configuration)
        {
            if (client == null) throw new ArgumentNullException("client");
            if (asyncClient == null) throw new ArgumentNullException("asyncClient");
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = Com.Sajari.Sdk.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public Com.Sajari.Sdk.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public Com.Sajari.Sdk.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public string GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public Com.Sajari.Sdk.Client.IReadableConfiguration Configuration { get; set; }

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public Com.Sajari.Sdk.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Create promotion Create a new promotion in a collection.
        /// </summary>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection to create a promotion in, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="promotion">The promotion to create.</param>
        /// <returns>Promotion</returns>
        public Promotion CreatePromotion(string collectionId, Promotion promotion)
        {
            Com.Sajari.Sdk.Client.ApiResponse<Promotion> localVarResponse = CreatePromotionWithHttpInfo(collectionId, promotion);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Create promotion Create a new promotion in a collection.
        /// </summary>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection to create a promotion in, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="promotion">The promotion to create.</param>
        /// <returns>ApiResponse of Promotion</returns>
        public Com.Sajari.Sdk.Client.ApiResponse<Promotion> CreatePromotionWithHttpInfo(string collectionId, Promotion promotion)
        {
            // verify the required parameter 'collectionId' is set
            if (collectionId == null)
            {
                throw new Com.Sajari.Sdk.Client.ApiException(400, "Missing required parameter 'collectionId' when calling PromotionsApi->CreatePromotion");
            }

            // verify the required parameter 'promotion' is set
            if (promotion == null)
            {
                throw new Com.Sajari.Sdk.Client.ApiException(400, "Missing required parameter 'promotion' when calling PromotionsApi->CreatePromotion");
            }

            Com.Sajari.Sdk.Client.RequestOptions localVarRequestOptions = new Com.Sajari.Sdk.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Com.Sajari.Sdk.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Com.Sajari.Sdk.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("collection_id", Com.Sajari.Sdk.Client.ClientUtils.ParameterToString(collectionId)); // path parameter
            localVarRequestOptions.Data = promotion;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Com.Sajari.Sdk.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<Promotion>("/v4/collections/{collection_id}/promotions", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("CreatePromotion", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Create promotion Create a new promotion in a collection.
        /// </summary>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection to create a promotion in, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="promotion">The promotion to create.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Promotion</returns>
        public async System.Threading.Tasks.Task<Promotion> CreatePromotionAsync(string collectionId, Promotion promotion, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Com.Sajari.Sdk.Client.ApiResponse<Promotion> localVarResponse = await CreatePromotionWithHttpInfoAsync(collectionId, promotion, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Create promotion Create a new promotion in a collection.
        /// </summary>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection to create a promotion in, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="promotion">The promotion to create.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Promotion)</returns>
        public async System.Threading.Tasks.Task<Com.Sajari.Sdk.Client.ApiResponse<Promotion>> CreatePromotionWithHttpInfoAsync(string collectionId, Promotion promotion, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'collectionId' is set
            if (collectionId == null)
            {
                throw new Com.Sajari.Sdk.Client.ApiException(400, "Missing required parameter 'collectionId' when calling PromotionsApi->CreatePromotion");
            }

            // verify the required parameter 'promotion' is set
            if (promotion == null)
            {
                throw new Com.Sajari.Sdk.Client.ApiException(400, "Missing required parameter 'promotion' when calling PromotionsApi->CreatePromotion");
            }


            Com.Sajari.Sdk.Client.RequestOptions localVarRequestOptions = new Com.Sajari.Sdk.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Com.Sajari.Sdk.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Com.Sajari.Sdk.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("collection_id", Com.Sajari.Sdk.Client.ClientUtils.ParameterToString(collectionId)); // path parameter
            localVarRequestOptions.Data = promotion;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Com.Sajari.Sdk.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<Promotion>("/v4/collections/{collection_id}/promotions", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("CreatePromotion", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Delete promotion Delete a promotion and all of its associated data.  &gt; Note: This operation cannot be reversed.
        /// </summary>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection the promotion belongs to, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="promotionId">The promotion to delete, e.g. &#x60;1234&#x60;.</param>
        /// <returns>Object</returns>
        public Object DeletePromotion(string collectionId, string promotionId)
        {
            Com.Sajari.Sdk.Client.ApiResponse<Object> localVarResponse = DeletePromotionWithHttpInfo(collectionId, promotionId);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Delete promotion Delete a promotion and all of its associated data.  &gt; Note: This operation cannot be reversed.
        /// </summary>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection the promotion belongs to, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="promotionId">The promotion to delete, e.g. &#x60;1234&#x60;.</param>
        /// <returns>ApiResponse of Object</returns>
        public Com.Sajari.Sdk.Client.ApiResponse<Object> DeletePromotionWithHttpInfo(string collectionId, string promotionId)
        {
            // verify the required parameter 'collectionId' is set
            if (collectionId == null)
            {
                throw new Com.Sajari.Sdk.Client.ApiException(400, "Missing required parameter 'collectionId' when calling PromotionsApi->DeletePromotion");
            }

            // verify the required parameter 'promotionId' is set
            if (promotionId == null)
            {
                throw new Com.Sajari.Sdk.Client.ApiException(400, "Missing required parameter 'promotionId' when calling PromotionsApi->DeletePromotion");
            }

            Com.Sajari.Sdk.Client.RequestOptions localVarRequestOptions = new Com.Sajari.Sdk.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Com.Sajari.Sdk.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Com.Sajari.Sdk.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("collection_id", Com.Sajari.Sdk.Client.ClientUtils.ParameterToString(collectionId)); // path parameter
            localVarRequestOptions.PathParameters.Add("promotion_id", Com.Sajari.Sdk.Client.ClientUtils.ParameterToString(promotionId)); // path parameter

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Com.Sajari.Sdk.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Delete<Object>("/v4/collections/{collection_id}/promotions/{promotion_id}", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DeletePromotion", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Delete promotion Delete a promotion and all of its associated data.  &gt; Note: This operation cannot be reversed.
        /// </summary>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection the promotion belongs to, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="promotionId">The promotion to delete, e.g. &#x60;1234&#x60;.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Object</returns>
        public async System.Threading.Tasks.Task<Object> DeletePromotionAsync(string collectionId, string promotionId, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Com.Sajari.Sdk.Client.ApiResponse<Object> localVarResponse = await DeletePromotionWithHttpInfoAsync(collectionId, promotionId, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Delete promotion Delete a promotion and all of its associated data.  &gt; Note: This operation cannot be reversed.
        /// </summary>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection the promotion belongs to, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="promotionId">The promotion to delete, e.g. &#x60;1234&#x60;.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Object)</returns>
        public async System.Threading.Tasks.Task<Com.Sajari.Sdk.Client.ApiResponse<Object>> DeletePromotionWithHttpInfoAsync(string collectionId, string promotionId, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'collectionId' is set
            if (collectionId == null)
            {
                throw new Com.Sajari.Sdk.Client.ApiException(400, "Missing required parameter 'collectionId' when calling PromotionsApi->DeletePromotion");
            }

            // verify the required parameter 'promotionId' is set
            if (promotionId == null)
            {
                throw new Com.Sajari.Sdk.Client.ApiException(400, "Missing required parameter 'promotionId' when calling PromotionsApi->DeletePromotion");
            }


            Com.Sajari.Sdk.Client.RequestOptions localVarRequestOptions = new Com.Sajari.Sdk.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Com.Sajari.Sdk.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Com.Sajari.Sdk.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("collection_id", Com.Sajari.Sdk.Client.ClientUtils.ParameterToString(collectionId)); // path parameter
            localVarRequestOptions.PathParameters.Add("promotion_id", Com.Sajari.Sdk.Client.ClientUtils.ParameterToString(promotionId)); // path parameter

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Com.Sajari.Sdk.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.DeleteAsync<Object>("/v4/collections/{collection_id}/promotions/{promotion_id}", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("DeletePromotion", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get promotion Retrieve the details of a promotion.
        /// </summary>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection that owns the promotion, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="promotionId">The promotion to retrieve, e.g. &#x60;1234&#x60;.</param>
        /// <returns>Promotion</returns>
        public Promotion GetPromotion(string collectionId, string promotionId)
        {
            Com.Sajari.Sdk.Client.ApiResponse<Promotion> localVarResponse = GetPromotionWithHttpInfo(collectionId, promotionId);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get promotion Retrieve the details of a promotion.
        /// </summary>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection that owns the promotion, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="promotionId">The promotion to retrieve, e.g. &#x60;1234&#x60;.</param>
        /// <returns>ApiResponse of Promotion</returns>
        public Com.Sajari.Sdk.Client.ApiResponse<Promotion> GetPromotionWithHttpInfo(string collectionId, string promotionId)
        {
            // verify the required parameter 'collectionId' is set
            if (collectionId == null)
            {
                throw new Com.Sajari.Sdk.Client.ApiException(400, "Missing required parameter 'collectionId' when calling PromotionsApi->GetPromotion");
            }

            // verify the required parameter 'promotionId' is set
            if (promotionId == null)
            {
                throw new Com.Sajari.Sdk.Client.ApiException(400, "Missing required parameter 'promotionId' when calling PromotionsApi->GetPromotion");
            }

            Com.Sajari.Sdk.Client.RequestOptions localVarRequestOptions = new Com.Sajari.Sdk.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Com.Sajari.Sdk.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Com.Sajari.Sdk.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("collection_id", Com.Sajari.Sdk.Client.ClientUtils.ParameterToString(collectionId)); // path parameter
            localVarRequestOptions.PathParameters.Add("promotion_id", Com.Sajari.Sdk.Client.ClientUtils.ParameterToString(promotionId)); // path parameter

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Com.Sajari.Sdk.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<Promotion>("/v4/collections/{collection_id}/promotions/{promotion_id}", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetPromotion", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get promotion Retrieve the details of a promotion.
        /// </summary>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection that owns the promotion, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="promotionId">The promotion to retrieve, e.g. &#x60;1234&#x60;.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Promotion</returns>
        public async System.Threading.Tasks.Task<Promotion> GetPromotionAsync(string collectionId, string promotionId, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Com.Sajari.Sdk.Client.ApiResponse<Promotion> localVarResponse = await GetPromotionWithHttpInfoAsync(collectionId, promotionId, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get promotion Retrieve the details of a promotion.
        /// </summary>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection that owns the promotion, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="promotionId">The promotion to retrieve, e.g. &#x60;1234&#x60;.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Promotion)</returns>
        public async System.Threading.Tasks.Task<Com.Sajari.Sdk.Client.ApiResponse<Promotion>> GetPromotionWithHttpInfoAsync(string collectionId, string promotionId, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'collectionId' is set
            if (collectionId == null)
            {
                throw new Com.Sajari.Sdk.Client.ApiException(400, "Missing required parameter 'collectionId' when calling PromotionsApi->GetPromotion");
            }

            // verify the required parameter 'promotionId' is set
            if (promotionId == null)
            {
                throw new Com.Sajari.Sdk.Client.ApiException(400, "Missing required parameter 'promotionId' when calling PromotionsApi->GetPromotion");
            }


            Com.Sajari.Sdk.Client.RequestOptions localVarRequestOptions = new Com.Sajari.Sdk.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Com.Sajari.Sdk.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Com.Sajari.Sdk.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("collection_id", Com.Sajari.Sdk.Client.ClientUtils.ParameterToString(collectionId)); // path parameter
            localVarRequestOptions.PathParameters.Add("promotion_id", Com.Sajari.Sdk.Client.ClientUtils.ParameterToString(promotionId)); // path parameter

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Com.Sajari.Sdk.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<Promotion>("/v4/collections/{collection_id}/promotions/{promotion_id}", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetPromotion", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// List promotions Retrieve a list of promotions in a collection.  Promotion pins, exclusions and filter boosts are not returned in this call.
        /// </summary>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection that owns this set of promotions, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="pageSize">The maximum number of promotions to return. The service may return fewer than this value.  If unspecified, at most 50 promotions are returned.  The maximum value is 1000; values above 1000 are coerced to 1000. (optional)</param>
        /// <param name="pageToken">A page token, received from a previous [ListPromotions](/api#operation/ListPromotions) call.  Provide this to retrieve the subsequent page.  When paginating, all other parameters provided to [ListPromotions](/api#operation/ListPromotions) must match the call that provided the page token. (optional)</param>
        /// <returns>ListPromotionsResponse</returns>
        public ListPromotionsResponse ListPromotions(string collectionId, int? pageSize = default(int?), string pageToken = default(string))
        {
            Com.Sajari.Sdk.Client.ApiResponse<ListPromotionsResponse> localVarResponse = ListPromotionsWithHttpInfo(collectionId, pageSize, pageToken);
            return localVarResponse.Data;
        }

        /// <summary>
        /// List promotions Retrieve a list of promotions in a collection.  Promotion pins, exclusions and filter boosts are not returned in this call.
        /// </summary>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection that owns this set of promotions, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="pageSize">The maximum number of promotions to return. The service may return fewer than this value.  If unspecified, at most 50 promotions are returned.  The maximum value is 1000; values above 1000 are coerced to 1000. (optional)</param>
        /// <param name="pageToken">A page token, received from a previous [ListPromotions](/api#operation/ListPromotions) call.  Provide this to retrieve the subsequent page.  When paginating, all other parameters provided to [ListPromotions](/api#operation/ListPromotions) must match the call that provided the page token. (optional)</param>
        /// <returns>ApiResponse of ListPromotionsResponse</returns>
        public Com.Sajari.Sdk.Client.ApiResponse<ListPromotionsResponse> ListPromotionsWithHttpInfo(string collectionId, int? pageSize = default(int?), string pageToken = default(string))
        {
            // verify the required parameter 'collectionId' is set
            if (collectionId == null)
            {
                throw new Com.Sajari.Sdk.Client.ApiException(400, "Missing required parameter 'collectionId' when calling PromotionsApi->ListPromotions");
            }

            Com.Sajari.Sdk.Client.RequestOptions localVarRequestOptions = new Com.Sajari.Sdk.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Com.Sajari.Sdk.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Com.Sajari.Sdk.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("collection_id", Com.Sajari.Sdk.Client.ClientUtils.ParameterToString(collectionId)); // path parameter
            if (pageSize != null)
            {
                localVarRequestOptions.QueryParameters.Add(Com.Sajari.Sdk.Client.ClientUtils.ParameterToMultiMap("", "page_size", pageSize));
            }
            if (pageToken != null)
            {
                localVarRequestOptions.QueryParameters.Add(Com.Sajari.Sdk.Client.ClientUtils.ParameterToMultiMap("", "page_token", pageToken));
            }

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Com.Sajari.Sdk.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<ListPromotionsResponse>("/v4/collections/{collection_id}/promotions", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ListPromotions", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// List promotions Retrieve a list of promotions in a collection.  Promotion pins, exclusions and filter boosts are not returned in this call.
        /// </summary>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection that owns this set of promotions, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="pageSize">The maximum number of promotions to return. The service may return fewer than this value.  If unspecified, at most 50 promotions are returned.  The maximum value is 1000; values above 1000 are coerced to 1000. (optional)</param>
        /// <param name="pageToken">A page token, received from a previous [ListPromotions](/api#operation/ListPromotions) call.  Provide this to retrieve the subsequent page.  When paginating, all other parameters provided to [ListPromotions](/api#operation/ListPromotions) must match the call that provided the page token. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ListPromotionsResponse</returns>
        public async System.Threading.Tasks.Task<ListPromotionsResponse> ListPromotionsAsync(string collectionId, int? pageSize = default(int?), string pageToken = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Com.Sajari.Sdk.Client.ApiResponse<ListPromotionsResponse> localVarResponse = await ListPromotionsWithHttpInfoAsync(collectionId, pageSize, pageToken, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// List promotions Retrieve a list of promotions in a collection.  Promotion pins, exclusions and filter boosts are not returned in this call.
        /// </summary>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection that owns this set of promotions, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="pageSize">The maximum number of promotions to return. The service may return fewer than this value.  If unspecified, at most 50 promotions are returned.  The maximum value is 1000; values above 1000 are coerced to 1000. (optional)</param>
        /// <param name="pageToken">A page token, received from a previous [ListPromotions](/api#operation/ListPromotions) call.  Provide this to retrieve the subsequent page.  When paginating, all other parameters provided to [ListPromotions](/api#operation/ListPromotions) must match the call that provided the page token. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ListPromotionsResponse)</returns>
        public async System.Threading.Tasks.Task<Com.Sajari.Sdk.Client.ApiResponse<ListPromotionsResponse>> ListPromotionsWithHttpInfoAsync(string collectionId, int? pageSize = default(int?), string pageToken = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'collectionId' is set
            if (collectionId == null)
            {
                throw new Com.Sajari.Sdk.Client.ApiException(400, "Missing required parameter 'collectionId' when calling PromotionsApi->ListPromotions");
            }


            Com.Sajari.Sdk.Client.RequestOptions localVarRequestOptions = new Com.Sajari.Sdk.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Com.Sajari.Sdk.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Com.Sajari.Sdk.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("collection_id", Com.Sajari.Sdk.Client.ClientUtils.ParameterToString(collectionId)); // path parameter
            if (pageSize != null)
            {
                localVarRequestOptions.QueryParameters.Add(Com.Sajari.Sdk.Client.ClientUtils.ParameterToMultiMap("", "page_size", pageSize));
            }
            if (pageToken != null)
            {
                localVarRequestOptions.QueryParameters.Add(Com.Sajari.Sdk.Client.ClientUtils.ParameterToMultiMap("", "page_token", pageToken));
            }

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Com.Sajari.Sdk.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<ListPromotionsResponse>("/v4/collections/{collection_id}/promotions", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ListPromotions", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Update promotion Update the details of a promotion.  Pass each field that you want to update in the request body. Also specify the name of each field that you want to update in the &#x60;update_mask&#x60; in the request URL query string. Separate multiple fields with a comma. Fields included in the request body, but not included in the field mask are not updated.  For example, to update the &#x60;display_name&#x60; and &#x60;start_time&#x60; fields, make a &#x60;PATCH&#x60; request to the URL:  &#x60;&#x60;&#x60; /v4/collections/{collection_id}/promotions/{promotion_id}?update_mask&#x3D;display_name,start_time &#x60;&#x60;&#x60;  With the JSON body:  &#x60;&#x60;&#x60; {   \&quot;display_name\&quot;: \&quot;new value\&quot;,   \&quot;start_time\&quot;: \&quot;2006-01-02T15:04:05Z07:00\&quot;,   \&quot;end_time\&quot;: \&quot;2006-01-02T15:04:05Z07:00\&quot; } &#x60;&#x60;&#x60;  &gt; Note: In this example &#x60;end_time&#x60; is not updated because it is not specified in the &#x60;update_mask&#x60;.
        /// </summary>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection the promotion belongs to, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="promotionId">The promotion to update, e.g. &#x60;1234&#x60;.</param>
        /// <param name="updateMask">The list of fields to be updated, separated by a comma, e.g. &#x60;field1,field2&#x60;.  Each field should be in snake case, e.g. &#x60;display_name&#x60;, &#x60;filter_boosts&#x60;.  For each field that you want to update, provide a corresponding value in the promotion object containing the new value.</param>
        /// <param name="promotion">Details of the promotion to update.</param>
        /// <returns>Promotion</returns>
        public Promotion UpdatePromotion(string collectionId, string promotionId, string updateMask, Promotion promotion)
        {
            Com.Sajari.Sdk.Client.ApiResponse<Promotion> localVarResponse = UpdatePromotionWithHttpInfo(collectionId, promotionId, updateMask, promotion);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Update promotion Update the details of a promotion.  Pass each field that you want to update in the request body. Also specify the name of each field that you want to update in the &#x60;update_mask&#x60; in the request URL query string. Separate multiple fields with a comma. Fields included in the request body, but not included in the field mask are not updated.  For example, to update the &#x60;display_name&#x60; and &#x60;start_time&#x60; fields, make a &#x60;PATCH&#x60; request to the URL:  &#x60;&#x60;&#x60; /v4/collections/{collection_id}/promotions/{promotion_id}?update_mask&#x3D;display_name,start_time &#x60;&#x60;&#x60;  With the JSON body:  &#x60;&#x60;&#x60; {   \&quot;display_name\&quot;: \&quot;new value\&quot;,   \&quot;start_time\&quot;: \&quot;2006-01-02T15:04:05Z07:00\&quot;,   \&quot;end_time\&quot;: \&quot;2006-01-02T15:04:05Z07:00\&quot; } &#x60;&#x60;&#x60;  &gt; Note: In this example &#x60;end_time&#x60; is not updated because it is not specified in the &#x60;update_mask&#x60;.
        /// </summary>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection the promotion belongs to, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="promotionId">The promotion to update, e.g. &#x60;1234&#x60;.</param>
        /// <param name="updateMask">The list of fields to be updated, separated by a comma, e.g. &#x60;field1,field2&#x60;.  Each field should be in snake case, e.g. &#x60;display_name&#x60;, &#x60;filter_boosts&#x60;.  For each field that you want to update, provide a corresponding value in the promotion object containing the new value.</param>
        /// <param name="promotion">Details of the promotion to update.</param>
        /// <returns>ApiResponse of Promotion</returns>
        public Com.Sajari.Sdk.Client.ApiResponse<Promotion> UpdatePromotionWithHttpInfo(string collectionId, string promotionId, string updateMask, Promotion promotion)
        {
            // verify the required parameter 'collectionId' is set
            if (collectionId == null)
            {
                throw new Com.Sajari.Sdk.Client.ApiException(400, "Missing required parameter 'collectionId' when calling PromotionsApi->UpdatePromotion");
            }

            // verify the required parameter 'promotionId' is set
            if (promotionId == null)
            {
                throw new Com.Sajari.Sdk.Client.ApiException(400, "Missing required parameter 'promotionId' when calling PromotionsApi->UpdatePromotion");
            }

            // verify the required parameter 'updateMask' is set
            if (updateMask == null)
            {
                throw new Com.Sajari.Sdk.Client.ApiException(400, "Missing required parameter 'updateMask' when calling PromotionsApi->UpdatePromotion");
            }

            // verify the required parameter 'promotion' is set
            if (promotion == null)
            {
                throw new Com.Sajari.Sdk.Client.ApiException(400, "Missing required parameter 'promotion' when calling PromotionsApi->UpdatePromotion");
            }

            Com.Sajari.Sdk.Client.RequestOptions localVarRequestOptions = new Com.Sajari.Sdk.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Com.Sajari.Sdk.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Com.Sajari.Sdk.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("collection_id", Com.Sajari.Sdk.Client.ClientUtils.ParameterToString(collectionId)); // path parameter
            localVarRequestOptions.PathParameters.Add("promotion_id", Com.Sajari.Sdk.Client.ClientUtils.ParameterToString(promotionId)); // path parameter
            localVarRequestOptions.QueryParameters.Add(Com.Sajari.Sdk.Client.ClientUtils.ParameterToMultiMap("", "update_mask", updateMask));
            localVarRequestOptions.Data = promotion;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Com.Sajari.Sdk.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Patch<Promotion>("/v4/collections/{collection_id}/promotions/{promotion_id}", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("UpdatePromotion", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Update promotion Update the details of a promotion.  Pass each field that you want to update in the request body. Also specify the name of each field that you want to update in the &#x60;update_mask&#x60; in the request URL query string. Separate multiple fields with a comma. Fields included in the request body, but not included in the field mask are not updated.  For example, to update the &#x60;display_name&#x60; and &#x60;start_time&#x60; fields, make a &#x60;PATCH&#x60; request to the URL:  &#x60;&#x60;&#x60; /v4/collections/{collection_id}/promotions/{promotion_id}?update_mask&#x3D;display_name,start_time &#x60;&#x60;&#x60;  With the JSON body:  &#x60;&#x60;&#x60; {   \&quot;display_name\&quot;: \&quot;new value\&quot;,   \&quot;start_time\&quot;: \&quot;2006-01-02T15:04:05Z07:00\&quot;,   \&quot;end_time\&quot;: \&quot;2006-01-02T15:04:05Z07:00\&quot; } &#x60;&#x60;&#x60;  &gt; Note: In this example &#x60;end_time&#x60; is not updated because it is not specified in the &#x60;update_mask&#x60;.
        /// </summary>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection the promotion belongs to, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="promotionId">The promotion to update, e.g. &#x60;1234&#x60;.</param>
        /// <param name="updateMask">The list of fields to be updated, separated by a comma, e.g. &#x60;field1,field2&#x60;.  Each field should be in snake case, e.g. &#x60;display_name&#x60;, &#x60;filter_boosts&#x60;.  For each field that you want to update, provide a corresponding value in the promotion object containing the new value.</param>
        /// <param name="promotion">Details of the promotion to update.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Promotion</returns>
        public async System.Threading.Tasks.Task<Promotion> UpdatePromotionAsync(string collectionId, string promotionId, string updateMask, Promotion promotion, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Com.Sajari.Sdk.Client.ApiResponse<Promotion> localVarResponse = await UpdatePromotionWithHttpInfoAsync(collectionId, promotionId, updateMask, promotion, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Update promotion Update the details of a promotion.  Pass each field that you want to update in the request body. Also specify the name of each field that you want to update in the &#x60;update_mask&#x60; in the request URL query string. Separate multiple fields with a comma. Fields included in the request body, but not included in the field mask are not updated.  For example, to update the &#x60;display_name&#x60; and &#x60;start_time&#x60; fields, make a &#x60;PATCH&#x60; request to the URL:  &#x60;&#x60;&#x60; /v4/collections/{collection_id}/promotions/{promotion_id}?update_mask&#x3D;display_name,start_time &#x60;&#x60;&#x60;  With the JSON body:  &#x60;&#x60;&#x60; {   \&quot;display_name\&quot;: \&quot;new value\&quot;,   \&quot;start_time\&quot;: \&quot;2006-01-02T15:04:05Z07:00\&quot;,   \&quot;end_time\&quot;: \&quot;2006-01-02T15:04:05Z07:00\&quot; } &#x60;&#x60;&#x60;  &gt; Note: In this example &#x60;end_time&#x60; is not updated because it is not specified in the &#x60;update_mask&#x60;.
        /// </summary>
        /// <exception cref="Com.Sajari.Sdk.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="collectionId">The collection the promotion belongs to, e.g. &#x60;my-collection&#x60;.</param>
        /// <param name="promotionId">The promotion to update, e.g. &#x60;1234&#x60;.</param>
        /// <param name="updateMask">The list of fields to be updated, separated by a comma, e.g. &#x60;field1,field2&#x60;.  Each field should be in snake case, e.g. &#x60;display_name&#x60;, &#x60;filter_boosts&#x60;.  For each field that you want to update, provide a corresponding value in the promotion object containing the new value.</param>
        /// <param name="promotion">Details of the promotion to update.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Promotion)</returns>
        public async System.Threading.Tasks.Task<Com.Sajari.Sdk.Client.ApiResponse<Promotion>> UpdatePromotionWithHttpInfoAsync(string collectionId, string promotionId, string updateMask, Promotion promotion, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'collectionId' is set
            if (collectionId == null)
            {
                throw new Com.Sajari.Sdk.Client.ApiException(400, "Missing required parameter 'collectionId' when calling PromotionsApi->UpdatePromotion");
            }

            // verify the required parameter 'promotionId' is set
            if (promotionId == null)
            {
                throw new Com.Sajari.Sdk.Client.ApiException(400, "Missing required parameter 'promotionId' when calling PromotionsApi->UpdatePromotion");
            }

            // verify the required parameter 'updateMask' is set
            if (updateMask == null)
            {
                throw new Com.Sajari.Sdk.Client.ApiException(400, "Missing required parameter 'updateMask' when calling PromotionsApi->UpdatePromotion");
            }

            // verify the required parameter 'promotion' is set
            if (promotion == null)
            {
                throw new Com.Sajari.Sdk.Client.ApiException(400, "Missing required parameter 'promotion' when calling PromotionsApi->UpdatePromotion");
            }


            Com.Sajari.Sdk.Client.RequestOptions localVarRequestOptions = new Com.Sajari.Sdk.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Com.Sajari.Sdk.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Com.Sajari.Sdk.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("collection_id", Com.Sajari.Sdk.Client.ClientUtils.ParameterToString(collectionId)); // path parameter
            localVarRequestOptions.PathParameters.Add("promotion_id", Com.Sajari.Sdk.Client.ClientUtils.ParameterToString(promotionId)); // path parameter
            localVarRequestOptions.QueryParameters.Add(Com.Sajari.Sdk.Client.ClientUtils.ParameterToMultiMap("", "update_mask", updateMask));
            localVarRequestOptions.Data = promotion;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Com.Sajari.Sdk.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PatchAsync<Promotion>("/v4/collections/{collection_id}/promotions/{promotion_id}", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("UpdatePromotion", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

    }
}
