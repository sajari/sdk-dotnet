/*
 * Search.io API
 *
 * Search.io offers a search and discovery service with NeuralsearchÂ®, the world's first instant AI search technology. Businesses of all sizes use Search.io to build site search and discovery solutions that maximize e-commerce revenue, optimize on-site customer experience, and scale their online presence.
 *
 * The version of the OpenAPI document: v4
 * Contact: support@search.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Com.Sajari.Sdk.Api;
using Com.Sajari.Sdk.Model;
using Com.Sajari.Sdk.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Com.Sajari.Sdk.Test.Model
{
    /// <summary>
    ///  Class for testing Promotion
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class PromotionTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for Promotion
        //private Promotion instance;

        public PromotionTests()
        {
            // TODO uncomment below to create an instance of Promotion
            //instance = new Promotion();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of Promotion
        /// </summary>
        [Fact]
        public void PromotionInstanceTest()
        {
            // TODO uncomment below to test "IsType" Promotion
            //Assert.IsType<Promotion>(instance);
        }


        /// <summary>
        /// Test the property 'CollectionId'
        /// </summary>
        [Fact]
        public void CollectionIdTest()
        {
            // TODO unit test for the property 'CollectionId'
        }
        /// <summary>
        /// Test the property 'Condition'
        /// </summary>
        [Fact]
        public void ConditionTest()
        {
            // TODO unit test for the property 'Condition'
        }
        /// <summary>
        /// Test the property 'CreateTime'
        /// </summary>
        [Fact]
        public void CreateTimeTest()
        {
            // TODO unit test for the property 'CreateTime'
        }
        /// <summary>
        /// Test the property 'Disabled'
        /// </summary>
        [Fact]
        public void DisabledTest()
        {
            // TODO unit test for the property 'Disabled'
        }
        /// <summary>
        /// Test the property 'DisplayName'
        /// </summary>
        [Fact]
        public void DisplayNameTest()
        {
            // TODO unit test for the property 'DisplayName'
        }
        /// <summary>
        /// Test the property 'EndTime'
        /// </summary>
        [Fact]
        public void EndTimeTest()
        {
            // TODO unit test for the property 'EndTime'
        }
        /// <summary>
        /// Test the property 'Exclusions'
        /// </summary>
        [Fact]
        public void ExclusionsTest()
        {
            // TODO unit test for the property 'Exclusions'
        }
        /// <summary>
        /// Test the property 'FilterBoosts'
        /// </summary>
        [Fact]
        public void FilterBoostsTest()
        {
            // TODO unit test for the property 'FilterBoosts'
        }
        /// <summary>
        /// Test the property 'FilterConditions'
        /// </summary>
        [Fact]
        public void FilterConditionsTest()
        {
            // TODO unit test for the property 'FilterConditions'
        }
        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'Pins'
        /// </summary>
        [Fact]
        public void PinsTest()
        {
            // TODO unit test for the property 'Pins'
        }
        /// <summary>
        /// Test the property 'RangeBoosts'
        /// </summary>
        [Fact]
        public void RangeBoostsTest()
        {
            // TODO unit test for the property 'RangeBoosts'
        }
        /// <summary>
        /// Test the property 'StartTime'
        /// </summary>
        [Fact]
        public void StartTimeTest()
        {
            // TODO unit test for the property 'StartTime'
        }
        /// <summary>
        /// Test the property 'UpdateTime'
        /// </summary>
        [Fact]
        public void UpdateTimeTest()
        {
            // TODO unit test for the property 'UpdateTime'
        }

    }

}
