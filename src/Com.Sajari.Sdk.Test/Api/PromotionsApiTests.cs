/*
 * Search.io API
 *
 * Search.io offers a search and discovery service with NeuralsearchÂ®, the world's first instant AI search technology. Businesses of all sizes use Search.io to build site search and discovery solutions that maximize e-commerce revenue, optimize on-site customer experience, and scale their online presence.
 *
 * The version of the OpenAPI document: v4
 * Contact: support@search.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Com.Sajari.Sdk.Client;
using Com.Sajari.Sdk.Api;
// uncomment below to import models
//using Com.Sajari.Sdk.Model;

namespace Com.Sajari.Sdk.Test.Api
{
    /// <summary>
    ///  Class for testing PromotionsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class PromotionsApiTests : IDisposable
    {
        private PromotionsApi instance;

        public PromotionsApiTests()
        {
            instance = new PromotionsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PromotionsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' PromotionsApi
            //Assert.IsType<PromotionsApi>(instance);
        }

        /// <summary>
        /// Test CreatePromotion
        /// </summary>
        [Fact]
        public void CreatePromotionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string collectionId = null;
            //Promotion promotion = null;
            //var response = instance.CreatePromotion(collectionId, promotion);
            //Assert.IsType<Promotion>(response);
        }

        /// <summary>
        /// Test DeletePromotion
        /// </summary>
        [Fact]
        public void DeletePromotionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string collectionId = null;
            //string promotionId = null;
            //var response = instance.DeletePromotion(collectionId, promotionId);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test GetPromotion
        /// </summary>
        [Fact]
        public void GetPromotionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string collectionId = null;
            //string promotionId = null;
            //var response = instance.GetPromotion(collectionId, promotionId);
            //Assert.IsType<Promotion>(response);
        }

        /// <summary>
        /// Test ListPromotions
        /// </summary>
        [Fact]
        public void ListPromotionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string collectionId = null;
            //int? pageSize = null;
            //string pageToken = null;
            //var response = instance.ListPromotions(collectionId, pageSize, pageToken);
            //Assert.IsType<ListPromotionsResponse>(response);
        }

        /// <summary>
        /// Test UpdatePromotion
        /// </summary>
        [Fact]
        public void UpdatePromotionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string collectionId = null;
            //string promotionId = null;
            //string updateMask = null;
            //Promotion promotion = null;
            //var response = instance.UpdatePromotion(collectionId, promotionId, updateMask, promotion);
            //Assert.IsType<Promotion>(response);
        }
    }
}
